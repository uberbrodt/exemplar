// Code generated by go-bindata.
// sources:
// templates/dao/.pgx.tmpl.swp
// templates/dao/.sqlx.tmpl.swp
// templates/dao/pgx.tmpl
// templates/dao/sqlx.tmpl
// DO NOT EDIT!

package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDaoPgxTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x6d\x6c\x14\xc7\x19\xc7\x87\x97\xd2\x52\x17\x4a\x31\xaa\x54\x3e\xb4\xe3\x03\xca\x9e\x6b\xef\xd9\x2e\x50\xa0\x32\x08\xdb\x67\x61\xc9\xf8\xed\x0e\x17\x4a\x29\x5a\xdf\xcd\x1d\x67\xdf\xed\x6e\x77\xf7\xcc\x59\xcb\xd2\x7e\xe8\x8b\x50\x2b\x55\x15\x6d\xa5\x56\x48\xed\x87\xf6\x43\x69\xa5\xb6\x52\x84\x48\xa4\x48\x49\xa4\x44\x79\x51\x14\x45\x0a\x09\xdf\x50\x94\x08\x29\x6f\xe4\x85\x28\xe1\x4b\xa2\xfc\x67\x5f\xee\xf6\xce\x77\xf6\xd9\x38\x18\x29\xf3\x17\x3f\xef\xce\xce\xcc\x33\x33\xcf\x3c\xfb\x32\xc3\x4d\x75\x4d\x0e\x1d\xa3\x3f\x90\xf7\x10\x68\x0b\x21\x1b\x1f\xba\x39\x79\xe9\xfa\xf3\x1b\x2e\x3e\x4c\x48\x6a\xca\xd0\xd2\x16\x59\x54\x39\xbd\xb3\xfb\x40\x4f\x67\xf7\xbe\xfd\x9d\xdd\x9d\x3d\xdd\x32\x4b\xf5\xc8\x39\xd5\x62\x86\xaa\xe4\xc3\xe5\x2e\x78\x06\x63\x63\x86\x36\xcd\x52\x96\x19\xd3\x99\x61\x6a\x28\x14\x63\x25\x56\xd0\xf3\x8a\xd1\x99\xd5\x62\xe7\x66\x4c\x3d\x15\x33\x8d\x54\x2c\x9b\xb3\xce\x16\xa7\xe4\x94\x56\x88\x15\xa7\x98\xe1\x55\x0e\x8a\xc6\x2c\xf7\x68\x31\x33\x96\x56\xb4\x98\x9e\x2d\xc9\x16\x2e\x2c\xde\x5b\x21\xa1\x2f\xa0\x8a\x56\xa6\x73\xff\x26\xf2\xfd\x9e\xee\x2e\x9e\xdc\x11\x69\xa3\xad\x5b\x8f\xaf\x76\xaf\x84\x84\x84\x84\x84\x84\x84\x84\x84\x84\x84\xee\xa3\x2c\x7d\x2d\xf9\x39\x8e\x6b\xfd\xb4\xe1\x1f\xd7\xd4\x1c\xd7\xf9\xc7\xdd\xfe\xd1\xac\xc9\x17\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x7a\x70\xa5\xa4\x09\x69\xc1\xf1\x5d\xbe\x90\xdf\x52\x59\xff\xdf\xf9\x3a\x21\xd7\xc1\x4b\xe0\x2a\xf8\x23\xf8\x1d\xf8\x2d\xf8\x31\x68\x07\x51\x20\x81\x8f\x37\x13\xf2\x0f\x70\x01\x4c\x82\x11\x70\x00\xb4\x82\x4f\x36\x11\xf2\x01\x78\x1b\xdc\x00\x8f\x81\x47\xc0\x9f\x80\x06\x8e\x82\x5e\xd0\x0e\x24\xb0\x1b\xdc\xf9\x1a\x21\x97\xc1\x29\x30\x00\x64\xb0\x1e\xdc\x40\x47\x9f\x01\xff\x05\xbf\x02\x33\xe0\x27\x60\x02\x1c\x04\xdf\x06\xdb\xc0\x5b\x5f\x25\xe4\x71\xf0\x67\xf0\x1b\x70\x06\x9c\x04\x47\xc0\x61\x70\x08\xdc\xdc\x48\xc8\x25\x60\x83\x71\xb0\x0f\xec\x06\x6d\xa0\x15\x7c\x03\x6c\x01\x1f\x7e\x85\x90\xf3\xa0\x1d\xdc\xfa\x32\x21\xaf\x83\xd7\xc0\x69\xd0\x02\x36\x80\xa7\x37\x10\xf2\x14\x78\x12\x6c\x07\x2f\x7c\x89\x90\x6b\xe0\x97\xe0\x02\x70\xc0\x34\xf8\x21\xd8\x0b\xf6\x00\x0a\xde\x5b\x4f\xc8\x9b\xe0\x09\x70\x19\xe4\xc1\x34\xc8\x81\xff\xad\x23\x84\x81\x11\xb0\x1d\x6c\x03\xad\x7c\x13\x06\xbc\xb8\x96\x90\xe7\xc0\xb3\xe0\x2a\xf8\x35\xf8\x05\xf8\x29\xd8\x0f\xda\xc0\xfb\x6b\xbc\x39\xbd\x5d\xbd\x41\xe3\x10\x0a\x19\xcc\x2a\x1a\x2a\x35\x53\x8a\x6a\xdb\x74\xa7\x9c\xb0\x8c\x62\xca\x4a\xce\xe9\x6c\x44\x29\x30\xea\x38\x13\xda\x39\x53\x32\xf0\x27\xea\x96\x4f\xb3\x0c\x33\x28\x4f\xcb\xfd\x79\xcd\x64\x92\x77\x39\x97\xa1\xcc\x30\x68\x5b\x2f\x55\x73\x79\x6a\x07\x66\x91\xe8\x70\x33\xfc\xc6\x50\xcd\x4b\x1f\xec\xa5\x56\x49\x1e\x2f\x32\x63\x4e\x32\x7f\x86\x42\xba\x67\xc7\x2b\xc7\x85\xab\xf4\x7b\xbd\x34\x53\xb0\xe4\x84\x6e\xe4\x54\x2b\x23\x45\x46\x07\x07\x13\xf1\x24\xdd\x95\x8e\x74\x50\x2d\x93\x31\x99\x55\x6e\xdd\x4b\xd2\x43\xb4\x8b\xda\xa4\x09\x53\xc3\x43\xc7\x86\xb8\x25\x0a\x53\xf9\x5c\x21\x57\xb1\xe4\xa6\x9a\x37\x34\x3a\x31\x10\x9f\xa0\x7d\x27\xe9\x2e\x93\xdb\xd2\x8c\x34\x33\xfa\xe6\x2a\xfd\xf2\xd2\xdc\x33\x91\x08\x2c\x06\x66\xe0\x80\x48\x22\x3e\x1c\xef\x4f\xd2\x76\x3a\x38\x31\x7a\x8c\xda\xf6\x4e\x39\xa9\x4c\xe5\x5d\xc7\x3b\x0e\xfd\xd1\xd1\xf8\x44\x1c\x57\x55\x24\x47\x8d\xa4\x92\xa5\x3b\x33\x39\x96\x4f\x23\xab\x97\x1e\xa6\x11\x92\x29\xaa\x29\x2a\x99\x96\x66\x30\xda\xce\x6b\x0f\xe6\x54\x34\xe6\x55\x8f\x52\x9e\x4a\xe4\x73\x29\xd6\x37\x87\x4c\xb7\xaa\xec\xce\xe9\x79\xca\x6b\xf6\x2b\x26\x8a\x25\x4b\x92\x4e\xcb\xd9\xc1\xb4\x3b\x4e\x07\xa6\x87\xb6\xf3\x5f\xd2\x24\x4b\xe5\x41\x51\xf7\x97\x3c\x19\x25\xc5\x6c\xc7\xf7\x1a\xbf\x14\xcc\x05\x3f\x8f\x52\xe9\xd4\x69\xb7\x33\xd5\x81\xc4\x2d\x62\xde\x35\x23\xca\xbd\xba\xbc\xd0\x5b\x46\x8c\xb9\xce\x91\x07\xfa\x44\xa4\xad\x7a\xa4\x35\x8a\xb3\xd5\x8b\x2d\x29\x78\x02\xf1\x73\x3f\x34\x3c\x6f\xae\x9c\xef\xbc\xc9\xef\x6e\xca\x85\xf7\x7a\x9f\xc2\x3f\x2b\xe9\x9d\xea\x7b\x67\x9e\x8f\x1e\x28\xf7\xd4\x77\x4e\x13\x0e\xb1\x6d\x43\x51\xb3\xcc\xef\x15\x1f\x10\x5a\xc6\x99\xe9\x38\x9e\xb3\x7c\x57\xcd\x2a\x79\x33\x74\x8b\xc2\x6b\x4c\x4d\xd3\x4e\xa7\x72\xc7\xce\xca\x55\xdd\x43\x2b\x7e\x49\xbf\x01\x3e\x1e\x3c\x4a\xe7\x35\xe4\x1a\xe1\xe6\xf9\xb5\x53\xa7\x43\xb7\x01\xba\xe7\xba\x85\x95\x58\xea\x88\x91\x35\xeb\x4f\x95\x34\x4b\xeb\x0e\x32\x5a\x6d\xcc\x26\xb1\xd8\xa0\x66\x14\x14\x8b\x2a\xf5\x2b\xf0\x5b\x4c\x43\xa6\xc9\xef\x64\x6a\x9d\x45\x49\xc4\x07\x9d\x62\xb4\x68\xb2\x34\x72\xf1\xcf\x64\x06\xea\x63\xe4\x45\x3d\xad\x58\x0c\xcf\x57\xfc\x2d\x30\xd5\x32\x6b\x42\xcb\x60\x66\x31\x6f\xe1\x41\x8c\xa7\x73\xcd\xa3\xcd\xcf\xc2\xfc\x2b\xba\x0e\x2f\x4a\xe5\xb2\x38\x89\xd2\x46\xfe\x45\x66\xad\x87\x61\x62\x16\x97\x5c\xcf\x52\xc7\x59\x82\xbf\x43\x46\x79\x96\xca\xce\x49\x75\x7d\x58\x2e\x58\xa9\x12\x1a\x64\xf0\xe6\x29\xe7\xd5\xbc\xa1\xca\xd7\xa3\x8d\x06\xc5\xf5\xdd\xf2\x18\x96\x16\x33\x41\x7d\xff\x55\xe7\x7e\x92\x25\x30\x63\x52\xc3\x08\x55\x0c\x1a\x6a\xab\xde\x1d\xb3\xc4\xe6\x33\x9a\xff\x29\x38\xc2\x4a\x96\x14\xf5\x47\xdc\xe0\x13\x31\x98\x77\xd8\x29\x28\x33\xac\xf1\xb3\xbc\xab\x03\x5d\xc8\x33\xb5\x72\x2b\x46\xbd\x1b\xa1\x89\x2f\x05\xef\x59\xc8\x93\x4d\xbd\x2d\x62\x31\xee\x31\x13\xd1\xce\xdc\x0e\x07\xf7\x00\x02\x82\x36\xa8\xed\x07\x7a\x25\xce\xbd\x18\xaf\xf1\x77\x13\xd1\xda\xbc\x9b\x9b\x8a\xd2\x70\x50\xcf\x8f\xce\x7a\x91\x19\xad\xed\xf4\xfc\x68\x6c\xbe\x8f\x95\x28\xf4\x83\xd0\xb6\x61\xda\xcf\x6c\x26\xf2\x9a\x6b\x6a\xf1\x38\xa0\x3c\x0e\xca\x61\xd0\xc4\x2b\xa0\x26\x06\xc2\x21\xd0\x20\x00\x88\x85\x04\x06\x81\x2c\xbc\xaf\xfc\xd9\x35\xdd\x62\xf8\x2c\x1d\xe8\xf3\x5a\xef\xd7\x54\x75\x4c\xd3\xf2\x98\x99\xa0\x7c\xf8\xa5\xb6\x60\x85\xb2\xf7\x72\x05\x5d\xc3\x23\x37\xc2\x9d\xe7\x9e\xca\x43\xee\x81\xa5\x3d\x2b\x91\x90\xdf\xbc\xa2\xdc\x61\x5e\x19\xf7\x1d\x16\x18\x08\xfd\x80\x7e\x5a\x49\xcd\xa4\xf8\xaf\xe4\x23\xe5\x5c\x7c\x67\x46\xdc\xf5\xff\x2b\x58\x0f\xff\xbe\xc5\x5b\xff\x07\xff\xbf\x7f\x97\xaf\xeb\xc1\x47\xe0\xff\xe0\x3f\xc0\x06\x31\xf0\x4d\xf0\x29\xd6\xf6\x77\x37\x7b\x6b\xff\x7f\x83\xcb\xe0\xaf\xe0\x2f\x20\x09\x12\x20\x02\x5e\xc6\x7a\xfe\x51\xf0\x4f\xf0\x37\x90\x00\x03\xa0\x0f\x1c\x01\xb7\xb1\xae\x7f\x03\x5c\x03\x25\x90\x03\x59\x90\x01\xad\x60\x2b\x78\x15\x7d\xfb\x3b\xf8\x43\x8b\xd7\xcf\x8b\x20\x0f\x4e\xf8\x6b\xff\xbd\xa0\x0d\x7c\x07\x7c\x0b\xdc\xc1\x78\x6e\xf9\x7b\x00\x57\xfc\xb5\xff\x09\x30\x09\xc6\x40\x17\xd8\x01\xd6\x83\x77\xb0\xc6\xbf\x02\xfe\xb5\xf1\x7e\xed\xb8\x08\x09\x09\x09\x09\x09\x09\x09\x35\xab\xaa\xa5\x76\xf0\x89\x7f\x26\xbc\xb3\x1e\x2f\xb1\x94\xb7\x5f\xd3\x60\xf7\xa0\x81\x89\x45\x2c\x57\x65\x2f\xd6\x0b\xc7\x5f\x97\x38\x2b\xd0\xdd\x60\xb3\x43\x8b\xca\xb2\x1c\x5d\x5e\xe7\xbd\x76\x96\x34\x04\xaf\x67\xe5\x81\xd4\x29\xbd\xa0\x05\x27\xb4\x32\x5b\x91\x6a\xf7\xe4\x35\xd7\x40\xb0\x6d\x67\xdb\xde\x16\x4e\x62\x7c\x78\x2c\x5b\x2a\xaf\xb1\xc2\x9b\x77\x11\x32\x7f\x5b\x2e\xb4\xe2\x89\xd2\xe3\xae\x85\x64\x49\xd2\x78\x66\x9d\x35\x56\x78\x6f\xd2\x5d\x6f\xcd\xdb\x82\x5c\x78\x5c\xcb\x19\x96\xb7\x49\xb5\xe0\xb0\x78\x85\x45\x86\x36\xe4\x5a\x59\xe1\xa1\x95\x77\x54\xbd\x01\x5a\x7c\x73\x7f\x7c\x78\x29\xb3\x37\x6f\x91\xaf\x73\x2b\xf1\xca\x22\x3f\x48\x57\xaf\xf4\xf9\xc5\x8e\x4a\x5e\xb8\x2b\x63\x06\xd3\x15\x83\x49\x91\xfa\x8d\x9f\xf1\xa2\x24\xd2\x01\x07\x7f\x5e\x01\xd4\xc0\xc7\xf7\xcb\xaf\xab\xe4\x58\x2f\x4e\xeb\x3a\x76\x25\x43\x78\x71\xe7\x96\xf7\x1a\x3e\x0b\x00\x00\xff\xff\x72\xc8\x3a\x05\x00\x40\x00\x00")

func templatesDaoPgxTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoPgxTmplSwp,
		"templates/dao/.pgx.tmpl.swp",
	)
}

func templatesDaoPgxTmplSwp() (*asset, error) {
	bytes, err := templatesDaoPgxTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/.pgx.tmpl.swp", size: 16384, mode: os.FileMode(420), modTime: time.Unix(1457501253, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoSqlxTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\xcd\x6f\xdc\xc4\x1b\xc7\xe7\xd7\xfe\x5a\x08\x50\x52\x01\x12\x9c\xd0\x74\x49\xab\xdd\x90\xf5\x26\x29\xa2\x69\x69\x78\x49\xbb\xa1\x11\x6d\x42\xb3\x4b\x0b\x4a\x79\x71\xec\xd9\xe0\xd6\x6b\xbb\x63\x6f\xe3\xc8\x2c\x1c\x90\x10\x88\x0a\xae\x08\x04\xb4\xd0\xaa\x42\xe5\x00\x55\x39\xc0\x1f\x80\xc4\x01\x24\x84\x84\x84\x84\x54\x89\x03\x12\xaf\x2d\x08\x54\x2e\x45\x7c\x67\xec\xdd\x6c\x36\x2f\x1b\x48\x1a\x40\xcc\x57\xfa\xd4\x3b\x33\xcf\x3c\x7e\xe6\x99\x19\xd7\x8e\x3d\xde\xbd\x6f\x68\x0f\xdd\xa2\xdd\x46\xa0\xf5\x84\x7c\x74\xf6\xdc\xbe\x07\xbf\xf8\x78\xed\x73\xef\x13\x62\x8c\x73\xd7\x0c\x48\x4b\x59\x5e\xb6\x67\x6b\x6f\xb6\xe7\xf6\xbe\x6c\x4f\xb6\xb7\x47\x63\x46\xaf\x66\x39\x01\xe3\x8e\x6e\x37\xda\x3d\x19\x3b\xcc\xdd\xcf\xdd\x83\xcc\x08\xfc\x9c\xc7\xb8\xef\xc2\x28\xc7\x42\x56\xf6\x6c\x9d\x67\x27\xdc\xdc\xe4\x21\xdf\x33\x72\x3e\x37\x72\x13\x56\xf0\x78\x65\x5c\x33\xdc\x72\xae\x32\xce\x78\xdc\xb9\x66\x9a\x0b\xe4\x31\x60\x7e\xce\xd4\xdd\x9c\x7f\xd8\x0e\xb5\x00\x35\xad\xc3\x55\x52\xfa\xef\xa9\x12\x94\xb2\x7d\xeb\xc8\xe6\xde\x9e\x6e\x51\xbc\x25\xb5\x81\x5e\x7f\xdd\x03\x7f\x77\x54\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x2b\xa8\xc0\x5b\x45\x9e\xc2\x71\x55\x52\x2e\x25\xc7\xff\x35\x1d\x57\x27\xc7\xb6\xe4\x38\xd5\xd4\xae\xa4\xa4\xa4\xa4\xa4\xa4\xa4\xa4\xa4\xa4\xa4\xa4\xa4\xa4\xf4\xcf\x95\x6e\x12\x72\x11\x0f\xf1\xa7\xc5\x03\xfe\xfa\xe9\xe7\xff\x73\xed\x84\x9c\x01\x27\xc1\x09\xf0\x0c\x30\xc1\x01\x30\x06\x36\x82\x0b\xd7\x12\x72\x1e\x7c\x06\xc6\xc0\x76\xf0\xed\x3a\x42\xce\x82\xe3\xe0\x75\xf0\x1a\xb8\x11\x5c\xbc\x06\xbe\xc0\x31\x70\x18\x3c\x02\x0e\x80\x31\xf0\xce\xd5\xf0\x0f\xee\x00\x1d\xe0\xc2\x55\xf0\x03\xbe\x01\x9f\x83\x53\xe0\x38\x38\x06\x8e\x82\x03\x60\x1f\xc8\x82\x36\xf0\x73\x1b\x21\x5f\x82\xf7\xc0\x8b\xe0\x31\x70\x2f\xb8\x07\xe4\x40\x16\x74\x01\x7e\x25\x21\xbb\xc0\xa5\x2b\x08\xf9\x1a\x9c\x01\x6f\x83\xd3\xe0\x25\x60\x01\x03\x8c\x83\x61\x70\x33\xb8\x09\xfc\xba\x96\x90\x4f\xc1\x07\xe0\x04\xa8\x82\xfd\x20\x0d\xda\x41\x1b\xb8\xb8\x06\x76\xe0\x07\xf0\x3d\xf8\x0e\x9c\x02\x6f\x80\x00\xdc\x07\xb6\x83\x6d\x60\xab\xb0\xfd\x3f\x21\xbf\x80\x0f\xc1\xab\xe0\x05\x70\x14\x3c\x0f\xfa\xc0\x66\xb0\x06\x7c\x85\x79\xf9\x04\xbc\xbb\x3a\x9e\xa3\x93\xe0\x59\x10\x00\x0e\x6c\x30\x08\xb6\x82\x1b\xc0\xa5\x55\x18\x13\x38\x0d\xde\x02\x6f\x82\xa7\xc1\x11\xb0\x1f\xdc\x0d\x7e\xaf\xff\xd1\x86\x42\x55\xf9\x2f\xe4\x6a\xc3\x8c\x99\xfe\x90\xe3\x33\x1e\xd0\x7e\x5a\xd2\x6d\x9f\xc9\x46\xab\x44\x19\xe7\xb4\xbf\x9f\x3a\x96\x4d\x23\x59\xf7\x68\x97\xac\x9b\xc7\x43\x0b\xc7\x33\x9a\x5b\x05\x31\xa3\x7d\x69\xd1\x6e\xeb\xa7\x41\xa8\x0d\xeb\x65\x66\xe6\x43\x66\xfc\xb5\xe0\x6b\xe7\xf9\x13\x43\xa8\xf7\xa8\x5b\x35\x5b\x2f\xe8\x61\xba\x71\x59\x87\x9f\xf6\x0f\xdb\x5d\xd4\xcd\x48\x13\xfc\x16\xed\xa9\x28\xb2\xa4\xcf\xc2\xde\xdd\x54\x1b\xb4\x98\x8d\xd8\xb4\xa2\x3e\x6e\x33\xd1\xaf\x5a\x4d\x49\x6b\x52\xaa\x38\x06\x4d\xfb\x81\xcb\x19\xed\x8c\x22\xad\x20\x7e\xc5\x16\x19\x1a\x7b\x28\x86\x69\x37\x69\xe3\x15\x23\x28\x4e\x79\x89\x41\x17\xa2\xa0\x9d\xf2\x8b\x9d\x62\x98\x11\x91\xb9\x1c\x81\x92\x78\x70\x9c\x05\x15\xee\x88\xda\xa6\xd0\xe5\xc9\xb4\x9d\x03\x2d\x07\x50\xf1\x4c\x3d\x60\xf3\x0f\x60\xe1\xe0\xe3\xde\xf3\x84\x7e\x19\xa2\x5d\xae\x74\xb7\x8e\x98\x44\x11\x73\xcc\x6a\x75\x66\xe8\x61\x97\x58\x28\x33\x57\x17\x0d\xb1\xa4\x74\xcf\x83\x79\x1a\xed\x56\xa6\xde\x80\xd5\xe5\x1b\xba\x93\xc7\x20\x37\x24\x2b\x6c\xda\x51\xad\x65\xda\x4f\xad\x06\x43\xe5\xee\xa4\x9f\x44\x57\x40\x6d\xba\xd1\xa9\x68\x77\xd8\x64\x3a\x8a\x3a\x66\x0f\x40\x9a\x95\x30\x04\xe9\x61\x98\x85\x41\x3a\x93\xac\x6b\x93\x95\x58\x52\xbf\xc3\x76\x7d\x96\xce\x34\x6e\x81\xd9\x01\xca\xea\x64\xf4\xe8\xd4\xb8\x2b\xf6\x56\x18\x9f\x0a\xe3\x39\xf2\x32\x4d\xe9\x10\xb3\x75\x2b\x36\x59\x39\xd0\x0a\x1e\xb7\x9c\xa0\x94\x4e\x8d\x0c\x0e\x16\xf2\x45\xba\xd1\x4c\x61\x52\x4b\x25\x9f\x05\xf5\x93\xc7\x45\x7a\x27\xed\x16\x69\x6f\xed\x6a\xf7\xd0\x9e\x21\xe1\x89\xc2\x95\x6d\x95\xad\x69\x4f\xb2\xb4\x78\x47\x23\xa3\x3b\xf3\xa3\x74\xe0\x21\xba\xd1\x17\xbe\x5c\x6e\x32\x3e\x30\x35\x1d\x57\x5c\x16\x89\x49\xa5\x92\x14\xd6\x16\x62\x21\xbf\x3b\xbf\xa3\x48\x3b\xe9\xe0\xe8\xc8\x1e\x2a\x26\xa2\x61\x15\xd2\xfd\xbb\xf2\xa3\x79\xd4\x3a\x28\x8e\xf0\xa2\x3e\x41\x3b\x4a\x62\xb1\xa2\xa9\x9f\xde\x45\xe3\x55\x1a\x0a\x47\x65\xfd\x10\x4b\x8f\x3d\xdc\x39\xd7\x54\x76\xd1\xee\x4c\xf3\x52\xee\xc0\xaa\x77\x10\x56\x6d\xb5\x8a\x52\xc1\xb6\x0c\x36\x30\x85\x46\x79\x12\xb9\x85\xe8\x13\x54\xf4\xdc\xa1\xfb\x30\xc3\xa5\xc5\xa3\xf5\xe6\x79\xae\x2c\xf5\xf1\x53\xf9\x31\x62\x49\x37\x58\x54\x4d\x12\x2c\xaa\x6a\xd3\x26\x7e\x67\xe8\xfc\x31\xcb\xfd\x93\x99\xb5\xe5\xd5\xbe\x69\xb8\xc8\xa9\xdd\xf3\x2f\xda\x3d\xf3\xed\x9d\xcb\xba\x5d\x36\xc5\xab\x48\x56\x35\x5d\x75\x47\xdd\xc9\xfa\xd2\x69\x5c\xe9\x9b\xc2\x38\xf7\xcb\x97\xe9\x78\xa9\xf4\xc4\x09\x3f\xa2\x73\x24\x7d\xae\x41\xcc\xfa\xff\x76\xae\x34\x2f\xf9\xfa\x84\x24\x2e\x39\x85\x33\x37\xe0\x02\x89\x5c\xf9\x24\x2e\x35\x87\x73\x67\x70\x11\x49\x8b\x22\xae\x3b\x13\x2c\x09\x5a\x8c\x37\xb9\xb1\x42\x4c\x24\x40\x0f\x3a\xf3\x06\x0a\x49\x14\xbe\x70\xbd\xdb\x39\x40\xcb\xae\xc9\x6c\x2d\x9f\x7c\x64\x5e\xc0\x4c\xe1\xa2\x51\xeb\xd4\x38\x80\xd6\xbd\xea\xb7\x5b\x56\xd9\x73\x71\x93\x8e\x7b\xbd\x8e\xf8\xa7\x36\x24\x0f\xcc\xac\xdd\xe3\xd5\x43\x4e\x4c\x45\xcc\xb1\x8d\x0c\xba\xe6\x00\x57\xab\x54\xbd\xb0\xf0\xd7\xf1\x32\xa2\x39\x8d\x0f\x96\x5d\x8b\xbb\x8e\xfc\x62\x3e\x25\x9f\xff\x7f\xc3\x73\x7b\x5f\x7b\xfc\xfc\x5f\x7b\xbf\xff\x13\xca\xe7\xc1\x8f\xe0\x15\xf0\x32\xb0\xc1\x10\xd8\xd6\x1e\xdb\x6f\x69\x5f\xe1\x3f\x56\x28\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\xad\xb0\x5a\xbc\xfd\x59\xc4\x6b\xb6\xe5\x78\x4b\xb5\xf4\x57\x6c\x7f\x04\x00\x00\xff\xff\x77\x56\x5b\x6f\x00\x40\x00\x00")

func templatesDaoSqlxTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoSqlxTmplSwp,
		"templates/dao/.sqlx.tmpl.swp",
	)
}

func templatesDaoSqlxTmplSwp() (*asset, error) {
	bytes, err := templatesDaoSqlxTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/.sqlx.tmpl.swp", size: 16384, mode: os.FileMode(420), modTime: time.Unix(1457501403, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoPgxTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x71\x13\xda\x41\xca\x34\xa5\x7b\x1d\xe0\x0d\x73\x62\x63\x01\xd2\x26\xb5\x3d\x0c\xc3\x30\x04\x8a\x4c\xb9\x5a\xf5\xab\x24\x9d\x2a\xd0\xf4\xbf\xef\x8e\x14\x55\xc9\x91\x17\xd9\x69\x91\x3d\xd4\x08\x1c\x89\xe4\x7d\x77\xf7\xf1\x3b\xf2\x1c\xa7\x45\xce\x25\xd8\x51\x2a\x6d\xcb\xbc\x6c\x62\xf9\x6e\x7b\xeb\x87\x79\x7a\xfa\x77\x10\xbe\x0f\x4f\x8b\x4d\x69\x5b\x56\x55\xf1\x20\xdb\x30\x78\xd1\xac\xfb\x71\x02\xfe\x85\x7a\x14\x75\xdd\x1a\x57\x55\x33\xdf\xcc\xb1\xf5\x9b\x20\x65\x75\x6d\xa3\x3d\xcb\xd6\xb8\xd2\x92\xf7\x05\x83\xaa\xf2\xe7\x71\xb6\x66\x5c\x4f\x83\x90\x7c\x1b\x4a\xa8\xe0\x7c\x0a\x27\xe8\xd0\x3f\xcb\xb3\xec\x3a\xcf\x13\xa8\x5b\x83\xa5\xcc\x39\x1b\xb1\xde\xb2\x4e\x4f\x97\x61\x90\x09\x90\xef\x18\xf0\xfc\x23\xc4\x99\xcc\x21\x80\x8c\x7d\x84\x13\x8c\x10\x91\xc8\x7a\x85\xb8\x1a\xce\x8a\xb6\x59\x08\x02\x6d\xaa\x0a\x76\xa7\xa1\xae\x17\x88\xe1\x10\x90\x72\x85\x6f\x2e\x38\x83\x40\x1e\x30\xce\x73\xee\x42\xd5\xe1\x0b\xd3\x2c\x3d\x78\x11\xc5\x2c\x59\x2b\xda\xe6\xf4\x24\xe0\x7b\x74\x0c\xf8\xb9\x0b\x38\xdc\x11\x71\xb4\x10\x73\xc3\x47\xb5\xd6\xef\x04\x68\xd8\xa3\xf5\xe8\x82\x60\x30\x1e\x9f\xd2\x74\x0e\x70\x45\x9f\x6f\x3b\xbe\x3c\xb4\x05\x44\x6e\x17\xb8\xea\x3b\x8e\x94\x93\x6f\x26\x90\xc5\x09\xe6\x62\x4c\x39\x93\x5b\x9e\xd1\xa0\x4a\x54\x8d\x6b\x3b\xce\x04\xf9\x43\x86\x9d\x21\x5e\xdc\x03\x62\x44\x28\xbf\xa5\xa0\xd9\xee\xc9\x27\x82\x40\xb1\xd1\x0d\xba\x89\x0a\xed\x3c\x0a\xcd\xaa\x1f\x08\x40\x74\x15\xf0\xe7\x5f\xc7\x6a\x40\x38\x0a\xcb\x88\x40\xa0\x0a\xf6\x80\x75\x74\xd0\xa4\xb4\x4d\xa4\x62\x28\x0d\xde\xb3\xfd\x56\xaf\x3c\xdc\xfd\x84\x65\x86\x14\x62\x8e\x00\xd6\x2c\x62\x5c\x65\xe2\x9f\x25\xb9\x60\x8e\x1e\x8e\xf2\x66\xf0\x0d\x2b\xa5\x63\xbc\x1d\x26\x87\x31\xea\xd3\xa8\x3d\xa1\xf4\x85\x28\x1a\x25\x1e\xee\xfe\xa1\x22\xf7\x38\x73\xdb\xa7\x7d\xea\xdc\xa7\xd0\x4f\x2a\x1d\xa5\xd4\xc3\x73\x18\xa1\xd8\x3d\x49\x19\x61\x4c\x20\x28\x0a\x9c\x74\x9a\x01\x8f\x66\x5c\xe8\x15\x98\x11\xb9\x9e\x6f\x85\x3e\xcf\x79\x1a\x48\xd4\xf6\xa0\xa4\x8c\xf0\x45\x12\x87\x0c\xcb\x01\x57\xe2\x46\xc1\x2d\x83\xad\x60\x6b\x9c\xc5\x3f\xc1\xf0\xe4\x0e\x30\xb2\x6d\xb1\x0e\x24\xc3\xb3\x15\xbf\x53\x96\x49\xa1\x6b\x82\x95\x2c\xfc\x85\x6f\xc4\x70\x5d\x38\x77\xc3\x9e\x5d\x2c\x34\x74\xce\x78\x14\x84\xac\xaa\x2b\xeb\x2e\x48\x14\xf3\xbd\xe1\xe3\x24\xbb\xcb\xf6\xa0\x68\xe8\xbb\x61\x8d\x5c\x13\x5b\xad\x9b\x5d\x78\x53\xfe\x8e\xa0\x3b\x46\x27\xd4\xbd\x9f\x5c\xa0\xb7\xe9\x7d\xcf\x2f\xfc\x03\x64\x74\x16\x08\x5c\xe1\x14\x43\x95\x33\xe2\x9e\xa0\x50\xc5\x87\x84\x82\xb1\x97\xb3\xcb\xd9\xd9\x0a\x4e\x60\xbe\xb8\x7a\x4d\x78\xfe\x2a\xb8\x4d\xcc\x56\xfe\xfe\xeb\x6c\x31\xc3\xd1\x0c\x5f\xaf\xf8\x2a\xd8\x34\x79\x28\xb5\xfd\x0c\x97\x17\xaf\x2f\x56\xf0\x83\xdd\x95\xcb\x7f\x1e\x67\x3a\x59\xff\x7c\xea\xbf\xdd\x32\x7e\xaf\x46\x3e\x60\xdd\x14\xae\x4b\x64\x3d\x91\x90\x55\x39\x4c\x89\x07\xb2\xd4\x47\xe8\xaa\x7c\x36\x7a\xc6\x73\x24\xcb\xa3\xd9\x59\x52\xcd\x1d\xae\x19\x0f\x72\x8e\x48\xd3\x7b\xe8\xd4\x89\x07\x49\x9c\xc6\x92\x86\x70\x3e\x8a\x04\x53\xcf\xa3\x6f\xa0\xcf\x42\xa1\x6d\x9a\x03\x13\x20\x1e\xc1\xb6\xdd\x39\x81\xc9\xcb\x77\x13\xc0\x76\xd2\x5f\x16\x1c\xe3\x8b\x1c\xfb\x6a\x71\x3e\x5b\xc0\xf4\x0f\x78\x29\xc0\x6e\x73\x73\x9b\x12\x35\x88\x3a\xbb\x9f\xe0\xd5\x23\x68\x7a\x17\x5f\xae\x09\x4a\xd9\xec\x02\x35\xdc\x3c\x8e\x74\x35\x9f\x2f\x67\x04\x65\x1b\x42\xdd\xee\x71\x8b\x77\x9a\x67\x2e\xb8\x7e\x9d\x18\x19\x0c\x75\x4a\xbb\xf7\x4f\xff\xf0\x1e\xd1\x5c\x7c\x36\x6d\x8d\x29\xbf\xaf\x4a\xfb\xbf\x29\xcd\x9c\x36\x47\x68\x6c\x4f\x8b\x78\x98\xf4\xda\x1f\x69\x0f\x35\xd8\xf9\xf5\xe5\xc2\x85\x6a\x1a\x9c\x9c\xa6\x06\x6e\x7e\x25\x88\x86\x95\x9e\x28\xaa\x4a\xb7\x1b\xcb\xb7\x97\xd7\x9b\xb2\xbd\xdc\xbb\xd2\xd0\x5b\x2f\x64\x8a\xf2\x2b\xe8\xdf\x6c\xa7\x08\xaf\x39\x2b\x02\xce\x1c\x7b\x38\x9f\x1b\xed\xc1\xf6\xd0\x67\xcb\x5f\x0b\xb4\xef\x27\x8d\x59\xd0\xdd\xe3\x9b\x87\x07\xc0\x0c\x5b\x21\x87\x96\xfa\x98\x81\xf7\x58\x67\x94\xbb\xbe\xef\xf7\xb6\x81\x5a\xd2\xa1\x02\xef\x91\xfb\x9b\x6a\xc3\x1e\x25\x77\x87\x58\xdd\xbc\x7d\x49\x62\xb5\x87\xa7\x11\xfb\x9c\xbc\x6a\xd1\xe2\xc1\x38\xcc\x6c\xbf\x31\x79\xba\x84\x6f\xba\x55\xad\x13\xc4\xa2\xfe\x92\x92\x39\x30\xb5\xe3\x04\x34\x9c\xd6\xb1\x5b\xf6\x6f\x00\x00\x00\xff\xff\xc9\x1e\x73\x44\x82\x12\x00\x00")

func templatesDaoPgxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoPgxTmpl,
		"templates/dao/pgx.tmpl",
	)
}

func templatesDaoPgxTmpl() (*asset, error) {
	bytes, err := templatesDaoPgxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/pgx.tmpl", size: 4738, mode: os.FileMode(420), modTime: time.Unix(1457501193, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoSqlxTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\x5d\x6f\xd3\x40\x10\x7c\xcf\xaf\x58\x2c\x5a\xd9\x25\x72\xca\x2b\x52\x40\x4a\xeb\x88\x48\x6d\xa3\xc6\x91\x10\x42\x08\x39\xf1\xba\x18\x6c\x9f\x39\x5f\xa8\x23\x93\xff\xce\xde\x87\x9d\x8f\xba\x4a\x4a\x0b\x12\x52\xf3\xe4\xdc\xee\xce\xcd\xce\xcd\x9e\x1d\xa7\x39\xe3\x02\xac\x9b\x58\x7c\x5d\xcc\xdc\x39\x4b\x7b\xdf\x52\x16\x73\x96\xf5\x8a\x1f\x49\x69\x75\x5a\x12\x16\x33\xe4\x33\xce\x42\xd1\xc3\x12\xd3\x3c\x09\x78\x2f\x65\x21\x26\xeb\xe4\x28\x15\x56\xa7\x53\x55\x3c\xc8\x6e\x10\x5e\x9a\xe5\x37\x7d\x70\x47\xea\xb1\x58\xad\x9a\xdc\xaa\x32\x71\x13\xc3\xf0\x2a\x48\x71\xb5\xb2\xa8\x1e\xb3\x90\x32\x3b\x62\x99\x23\x54\x95\x3b\x8c\xb3\x10\xb9\x0e\x43\x21\xf8\x62\x2e\xa0\x82\xf3\x01\xa8\xed\x5d\xcf\xb0\xf1\x89\x38\xac\x9a\x2a\x5f\x30\x8e\x87\x16\xad\x49\x47\x31\x26\xa1\xe2\x3c\x94\x4f\x92\x72\xb4\xc8\xe6\x60\x17\x12\x0f\x4e\x88\xf7\x16\x21\x07\xe4\xbf\xc1\x92\xd6\x55\xa9\x2b\x97\xe1\x17\xc8\xa2\xb3\xa0\xa0\x0c\x3b\x87\x26\x38\x25\x72\x75\x9d\xad\xb0\x7c\x45\x6d\xbd\xde\x05\xe4\x9c\x71\x07\xaa\x0e\xd0\xef\x67\xc0\xa1\x84\xb6\x44\x15\xa6\xc3\x92\x5c\x2d\xdf\xbb\xf0\xce\xa6\x70\x02\xc3\xc9\xf8\x52\xa5\x4f\x83\x59\x52\xb7\xff\xe1\xbd\x37\xf1\x68\x35\xa3\xbf\x63\x3e\x0d\x6e\x4c\x9b\x14\xea\xc3\x3b\xb8\x18\x5d\x8e\xa6\xf0\xda\x52\x88\xb4\xbb\x44\x54\xdd\xba\xe7\x03\xf7\x7a\x81\x7c\x39\x61\xb7\xa5\x4d\x7b\x75\x21\x77\x0c\x11\x7f\x1e\x64\xf6\x71\xe9\x80\xaa\xe2\x28\x16\x3c\x83\xe3\x52\xd1\xef\x90\xa0\x8f\x14\x6d\x5a\xb6\xcb\xd6\x05\x51\xc2\x89\xf4\xa8\x3b\x2d\x1f\xad\x21\xfc\x25\x11\x37\x95\x14\xe5\x5e\x0d\xff\x5c\x42\x3f\x89\xe7\xf8\x70\xf3\x75\x81\x71\x42\x1a\x2c\x21\xce\x04\xf2\x28\x98\x63\x45\x8b\x49\x9c\xc6\x42\x2e\x51\x3c\x8a\x0a\x54\xcf\x24\xf2\xa7\xcf\x87\xc8\x5c\xca\x6e\xd3\xe0\x3b\xde\x9f\x7f\xea\x3c\x9d\xe0\x5a\xe9\x38\x6a\x5a\x79\x41\x88\x96\xe1\x52\xef\xf2\xaa\x0f\x74\x29\xb9\x7e\xce\xa9\x93\xc8\xb6\xc6\x93\x73\x6f\x02\x83\x8f\x70\x54\x80\xd5\xa8\xa0\x59\x91\xe2\x06\x51\xeb\xf0\x16\x4e\xf7\xa0\xe9\x33\x3f\x0a\x25\x94\xaa\xd9\x05\x32\x2a\xee\x47\x1a\x0f\x87\xbe\x27\xa1\xac\x5a\xfa\x1a\x4a\x59\x83\xdd\x16\xdd\xf6\xc9\x6c\x2c\x55\x6f\x29\xb3\x48\x89\x2c\x4e\xe8\xba\x33\x9e\xd2\x96\x32\x60\x21\x46\xc8\x15\xa4\x7b\x96\xb0\x02\x6d\x5d\x1a\x31\xb3\x78\x85\xa5\xb0\x9d\x0d\xbe\xb1\xdc\x35\xc3\x5b\xbb\xed\x4c\x9d\x75\x5b\x64\x66\x4f\x53\x54\x38\x1b\x16\x8f\xd7\x59\xc4\xb0\x4e\xbc\xcb\xb2\x8e\xac\x9a\xf4\x92\x8e\x3a\xc8\x73\x7a\x21\xd8\xd4\x44\xbc\x25\x4a\xd3\x1b\xa1\x3c\xd5\xb8\x1c\x74\xed\x3c\x4f\xcf\xff\x3b\x3d\xf5\x6d\xfc\x3c\x37\xf5\xdc\x34\x9f\x5b\xbb\x03\xb4\xf9\x05\xe5\x90\x97\x0b\xe4\xc2\x66\x26\xb2\xd3\x8d\xf6\xb2\x69\x7e\xcb\xa5\x55\xa5\x2b\xfd\xeb\x8b\xfa\x93\x0a\x36\x8d\xaa\x8d\xf8\xe5\xee\xf5\x26\xc3\x21\x7d\xa6\xcd\xf5\x49\xb1\xad\xb7\x64\xfb\x1b\x72\x9b\xf1\x22\x0f\x03\x81\x7b\x19\xef\xb0\xd5\x55\xff\x9e\xad\x56\x89\xee\x9f\x76\xbe\x3b\xdf\x3d\x4f\x26\x37\xcd\x43\x3b\x75\x33\x12\x7d\x63\xb6\xda\x59\x8c\x7c\x8e\x61\x31\x52\x9b\x90\xc9\xa2\x20\x29\xf0\xae\xbb\x0e\x3f\x9f\x87\x76\xfc\xa8\xe3\xba\xb7\xdb\x2d\xda\xbf\x03\x00\x00\xff\xff\xe0\x59\x5d\x64\x1d\x0d\x00\x00")

func templatesDaoSqlxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoSqlxTmpl,
		"templates/dao/sqlx.tmpl",
	)
}

func templatesDaoSqlxTmpl() (*asset, error) {
	bytes, err := templatesDaoSqlxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/sqlx.tmpl", size: 3357, mode: os.FileMode(420), modTime: time.Unix(1457501385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/dao/.pgx.tmpl.swp": templatesDaoPgxTmplSwp,
	"templates/dao/.sqlx.tmpl.swp": templatesDaoSqlxTmplSwp,
	"templates/dao/pgx.tmpl": templatesDaoPgxTmpl,
	"templates/dao/sqlx.tmpl": templatesDaoSqlxTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"dao": &bintree{nil, map[string]*bintree{
			".pgx.tmpl.swp": &bintree{templatesDaoPgxTmplSwp, map[string]*bintree{}},
			".sqlx.tmpl.swp": &bintree{templatesDaoSqlxTmplSwp, map[string]*bintree{}},
			"pgx.tmpl": &bintree{templatesDaoPgxTmpl, map[string]*bintree{}},
			"sqlx.tmpl": &bintree{templatesDaoSqlxTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

