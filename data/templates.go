// Code generated by go-bindata.
// sources:
// templates/dao/.pgx.tmpl.swp
// templates/dao/.sqlx.tmpl.swp
// templates/dao/pgx.tmpl
// templates/dao/sqlx.tmpl
// DO NOT EDIT!

package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDaoPgxTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x5f\x6c\x1c\x47\x1d\xc7\x27\x09\x49\x4c\xa1\x6d\x64\x4b\x48\x95\x40\x4c\x37\xae\xbb\xeb\xfa\xf6\x6c\xb7\xd0\x24\xc2\x2d\xb5\x7d\x06\x0b\x3b\x76\xec\x4b\x81\xa4\x26\x5a\xdf\xcd\x39\x1b\xdf\xed\x6e\x77\xf7\xec\x33\xdb\x23\x0f\xa5\xbc\xc0\x13\x4a\x51\xa5\x4a\xbc\xf0\x50\x89\x87\xf6\x89\x22\x9e\x00\x89\xff\x0f\x80\x10\x26\xe2\x05\x44\xf9\x23\xfe\x88\xf0\x27\x04\x90\x00\xc1\x77\x76\x76\xef\xf6\xce\x77\xb9\xb5\x31\x71\x24\xe6\xa7\x7c\xbc\x3b\x3b\x33\xbf\xd9\xf9\xcd\x6f\x66\xe7\x37\xb9\xd5\xd1\xa7\x67\xe7\xe9\xe3\xfa\x63\x04\x72\x82\x90\xfb\xf2\xbf\x7a\xfa\xe4\x37\xde\x38\x36\xc4\x0e\x91\xc2\xaa\x6b\x17\x7d\xd2\x53\x4c\x27\x33\x76\x7a\x3c\x33\xf6\xee\x53\x99\xb1\xcc\xf8\x98\xce\x0a\xe3\xba\x69\xf9\xcc\xb5\x8c\x72\xb2\xdc\xc7\x84\xc2\xec\xa2\x6b\x5f\x61\x05\xdf\xcb\x3a\xcc\xf5\x6c\x14\xca\xb2\x1a\xab\x38\x65\xc3\xcd\xac\xd9\xd9\xcd\x75\xcf\x29\x64\x3d\xb7\x90\x5d\x33\xfd\xcb\xd5\x55\xbd\x60\x57\xb2\xd5\x55\xe6\x8a\xca\x71\xd1\xac\x1f\x5e\x7d\xe6\x65\x8b\x86\x9d\x75\xd6\x6a\xba\x8f\x07\xbd\xdf\x56\x8a\x94\xff\x43\xa9\xfa\xa5\xcc\xa9\x7b\xc9\xa3\xe3\x63\xa3\x3c\x79\x52\x79\x90\x0e\xf4\x9f\x3f\xe8\xb7\x92\x22\x45\x8a\x14\x29\x52\xa4\x48\x91\x22\x45\xca\x1d\x14\xdf\x39\x4c\xae\xe2\x7a\x38\x4a\xbb\xd1\xf5\x50\xdb\xf5\x48\x74\x7d\x32\xba\x7a\x6d\xf9\x52\xa4\x48\x91\x22\x45\x8a\x14\x29\x52\xa4\x48\x91\x22\x45\x8a\x94\xbb\x57\x8c\x22\x21\xf7\xe0\x7a\x83\x07\xf2\x27\x9a\xf1\xff\xcd\xfb\x09\xd9\x06\x3f\x04\xaf\x83\x6b\xe0\x53\xe0\x93\xe0\x02\xd0\x80\x0a\x1e\x06\x7f\xbd\x8f\x90\xcf\x81\x3a\x38\x0f\xe6\xc1\x29\xd0\x0f\xfe\x79\x2f\x21\x7f\x02\xbf\x03\xd7\xc1\x97\xc1\x97\xc0\x35\x60\x81\xf7\x81\xf7\x00\x0d\x3c\x0c\x86\xc0\x9f\xdf\x4a\xc8\xcb\xe0\x02\x98\x02\x19\x70\x04\x5c\x7f\x0b\x21\xdf\x02\xaf\x82\x8f\x83\x2b\xe0\x22\x38\x07\x4e\x83\x77\x80\x01\xf0\x5b\x74\xe8\x2b\xe0\x45\xf0\x09\xf0\x11\xf0\x21\xf0\x5e\xf0\x04\x98\x00\x3f\x79\x33\x21\x9f\x06\x1f\x05\x8b\xe0\x5d\x60\x08\x50\xd0\x0f\x4e\x80\xfb\xc1\xcd\x3e\x42\x02\xa0\x81\x5f\x1e\x27\xe4\xe7\xe0\x0d\xf0\x0c\xb8\x07\x1c\x05\xdf\x3c\x46\xc8\xd7\xc1\xd7\xc0\x03\xe0\xbb\x47\x09\xf9\x22\x78\x1e\xd4\xc1\x73\xc0\x04\x67\xc0\x63\xe0\x51\xf0\x4e\xf0\x87\x37\x11\xf2\x1b\xf0\x55\xf0\x32\x58\x07\x26\xb8\x0c\x5e\x3b\x42\x48\x11\xcc\x83\x07\xc0\x00\xe8\x07\xff\x3e\x4c\xc8\xf7\xc1\x77\xc0\xb7\xc1\x17\xc0\x0b\xe0\x2a\x58\x01\x8f\x03\x0a\xfe\x78\x48\x8c\xe9\x8d\x96\x03\x9a\x3a\xa1\x10\x97\xf9\x55\xd7\xa2\x5e\xc1\xb0\x82\x80\x0e\xea\xcb\xbe\x5b\x2d\xf8\xf9\x2d\x87\x9d\x35\x2a\x8c\xd6\xeb\x4b\xf6\xa6\xa7\xba\xf8\xa3\x85\xe5\x8b\xac\xc4\x5c\xca\xd3\xfa\x54\xd9\xf6\x98\x2a\x1e\x9b\x25\xca\x5c\x97\x3e\x38\x41\x2d\xb3\x4c\x83\x58\x2d\x12\x23\x61\x46\xd4\x18\xaa\x89\xf4\x99\x09\xea\xd7\xf4\x73\x55\xe6\x6e\xa9\xde\xb3\x28\xe4\x08\x3d\xa2\x1c\x17\x3c\xa5\x8f\x4c\xd0\x52\xc5\xd7\x97\x1d\xd7\xb4\xfc\x92\xaa\x2c\xcc\xcc\x2c\xe7\xf2\xf4\xa1\xa2\x32\x42\xed\x52\xc9\x63\x7e\xa3\x75\x91\xa4\x4f\xd0\x51\x1a\x90\x14\xaa\xe6\x66\xe7\x67\xb9\x26\x0a\x55\x65\xb3\x62\x36\x35\x85\xa9\xf4\x8a\x16\x96\xa6\x73\x4b\x74\xf2\xc3\xf4\x21\x8f\xeb\xb2\xdd\x22\x73\x27\xb7\x9a\xef\x25\xd2\xdc\x32\x8a\x02\x8d\xb1\x1a\x18\x40\x59\xce\xcd\xe5\xa6\xf2\x74\x98\xce\x2c\x2d\xcc\xd3\x20\x18\xd4\xf3\xc6\x6a\x39\x34\x7c\xbd\x4e\x3f\xf8\xfe\xdc\x52\x0e\x4f\x2d\x24\x17\xdc\xbc\xb1\x46\x07\x4b\x26\x2b\x17\x91\x35\x41\x9f\xa4\x0a\x29\x55\xad\x02\x55\x3d\xdf\x76\x19\x1d\xe6\xb5\x67\x4c\x0b\x8d\x89\xea\x1a\xe5\xa9\xe5\xb2\x59\x60\x93\x5b\xc8\x0c\xab\xea\xe1\x98\x3e\x47\x79\xcd\x29\xc3\x43\xb1\x7c\x4d\x75\x68\x23\x3b\x1e\xf6\x7a\x7d\x04\xc3\x43\x87\xf9\x0f\x69\xf2\xb5\x46\xa7\x68\xf8\x43\x9e\x92\x51\x60\x41\x3d\xb2\x1a\x7f\x14\x8f\x05\xbf\xd7\xa8\x7a\x71\x25\x7c\x99\x56\x47\xe2\x1a\x31\xee\xb6\xab\x71\xab\xee\xcd\xf5\xf6\xe0\x63\xa1\x71\xf4\xe9\x49\xe9\x69\x07\xee\x69\xdd\xfc\xec\xe0\x7c\x4b\x8d\x57\x20\x7e\x1f\xb9\x86\xb0\xe6\xfe\xd9\x4e\x0c\xfe\x58\x2a\x13\xfe\xb7\xf3\x14\xf6\xd9\x4f\xeb\xb4\xce\x9d\x1d\x36\xba\xab\xcc\xd3\xd9\x38\x29\x0c\x12\x04\xae\x61\xad\xb1\xe8\xad\x78\x87\xd0\x32\xee\xbc\x7a\x5d\x18\x2b\x32\xd5\x86\x51\xf6\x12\x53\x14\x56\x63\x56\x91\x66\xea\xcd\x19\xbb\xa1\xb7\xbc\x1e\x5a\x89\x4a\x46\x0d\xf0\xfe\x60\x29\xdd\xd1\x50\xa8\x84\xab\xe7\xcf\x2e\xae\x24\xa6\x01\x5e\x2f\x34\x0b\xab\xb1\xc2\x53\xee\x9a\xd7\x79\xa8\xd4\x0d\xda\xb1\x93\x5a\xab\xb2\x80\x64\xb3\x33\xb6\x5b\x31\x7c\x6a\x74\xae\xc0\xa7\x98\x8d\x4c\x8f\xcf\x64\xea\x5f\x46\x49\xf8\x07\x5d\x65\xb4\xea\xb1\x22\x72\xf1\xcf\x63\x2e\xea\xa3\xe7\x55\xa7\x68\xf8\x0c\xeb\x2b\xfe\x56\x98\xe5\x7b\x6d\xae\xe5\x32\xaf\x5a\xf6\xb1\x10\x63\x75\x6e\x5b\xda\xa2\x2c\x8c\xbf\xe1\x38\xb0\xa2\xda\x28\x8b\x1b\x8d\x76\xb3\x2f\x32\xdb\x2d\x0c\x15\x1b\x78\x14\x5a\x96\xd6\xeb\xbb\xb0\x77\x42\x29\xcf\xb2\xd8\xa6\xda\xd1\x86\x8d\x82\xcd\x2a\x89\x4e\xc6\x5f\x9e\x46\x5e\xdb\x17\xaa\xf1\x5c\xeb\xd6\x29\x2e\x43\x8d\x3e\xec\xce\x67\xe2\xfa\xd1\xa7\x2e\xdc\x92\x2d\x63\xc4\xd4\xae\x1e\x6a\xb8\x34\xd1\x56\xa7\x19\xb3\xcb\xe6\x4b\x76\xb4\x15\x3c\xcb\x6a\xbe\xaa\x45\x3d\xee\xb2\x45\x8c\xc7\x1d\x7a\x2a\xc6\x3a\xeb\xbe\x96\x8f\x8e\xe0\x15\xca\xcc\x6a\x4e\x45\x4d\x4c\x84\x14\x3b\x05\xb1\x16\xf2\x64\xaa\xaf\x45\x36\xcb\x2d\xe6\xc1\xdb\x59\xf8\xc2\xf1\x1c\x80\x43\xd0\x2e\xb5\x23\x47\x6f\xfa\xb9\xf0\xf1\x36\x7b\xa7\xf0\xd6\xf4\x66\x4e\xe5\xa5\x49\xa7\xde\xe9\x9d\x9d\x3c\x53\x6b\x7f\xe9\x9d\xde\x98\xfe\x1d\x9b\x5e\x18\x39\x61\x10\x40\x75\x94\x99\xc6\xf3\xd2\x35\xd5\xdb\x0f\x28\xf7\x83\x86\x1b\xa4\xf8\x04\xb4\xf9\x40\xd2\x05\xba\x38\x00\xf1\x91\x40\x27\xf4\x79\xbe\x82\x45\x1f\x29\xac\x85\xbc\x1c\xf6\xa5\xd3\x93\xa2\xf9\x29\xdb\xb2\x16\x6d\xbb\x8c\xa1\x89\x2b\x24\xbf\x6a\xb7\xad\xd0\x30\x9f\x59\x71\x6c\xac\xb9\x0a\xb7\x5e\x78\xab\xcf\x86\x17\x56\x14\x5a\x94\x84\xe1\x44\x51\x6e\x31\x51\x26\xfc\x88\xc5\x0a\x12\x3f\xa0\xbf\x62\x14\xd6\x0b\xfc\x57\xf2\x4a\x23\x17\x1b\x4d\x25\x8c\xff\xb7\x11\xc3\xfe\xbe\x4f\xc4\xff\xf1\xff\xef\xff\x1d\x71\xfd\xdf\x78\x6c\x0f\x5e\x03\x9f\x07\x5b\x60\x04\x0c\x80\x7f\x20\xb6\xbf\x05\xfe\x02\x5e\x01\x2f\x81\xcf\x80\x17\xc1\xd9\xe8\x0c\xe0\xed\xe0\x7b\x88\xe7\x5f\x07\x9f\x05\x2f\x81\x0f\x44\xf1\xfe\x19\x70\x1a\xfc\x02\x71\xfd\x4f\xc1\xab\xc0\x02\x97\xc0\x0a\x78\x06\x1c\x07\xc7\xc0\x36\x62\xfa\x6b\xe0\x05\xf0\x3c\x60\x60\x12\x3c\x02\x86\xc1\xcf\x10\xcf\xbf\x02\x2e\x80\xa7\x80\x06\x4e\x02\x05\xfc\x1a\x31\xfc\x8f\xc1\x75\xf0\x23\x70\x15\xe4\xc0\x34\x78\x1b\x38\x0e\x8e\x82\x7f\xa1\xff\xb7\xfa\x84\x1d\xb6\xc1\x0f\xfa\xee\xdc\x19\x8c\x14\x29\x52\xa4\x48\x91\x22\x65\xcf\x12\xc4\xc2\xe2\x8d\x54\xda\x6b\x4b\x18\x1b\x6f\x9f\x2f\x25\x4f\xad\x73\x88\xc7\xc5\x59\x88\xdd\xbe\xc7\xd7\xc4\x39\x5e\x7c\x36\x32\x9d\x9b\xcb\xe5\x73\xf1\xc9\x08\x4d\x1c\x8d\xf0\xcd\x6c\x74\x38\x62\x16\x11\x19\x0c\x36\xce\x40\x2a\xe1\x9e\x52\x6c\x3d\x93\xfb\x4b\x8d\x4e\xb3\x32\xf3\x59\xbe\xa6\xda\x9d\x37\xa6\xad\x67\x41\xe1\xfe\x16\x9b\x4b\xd2\xab\x47\xa2\x41\x7e\xd0\x23\x3a\xe6\xf3\x33\xc7\x73\x73\xdd\x7b\xb7\x23\xd2\x70\x78\x9d\x5c\x33\xd2\x88\xd3\xad\xe1\x06\x7f\x38\xd2\xcc\x6b\x69\x79\xd1\x65\x8e\xe1\x32\x55\xe9\xbc\xad\xbf\x54\x0c\xbb\xae\x8c\xc0\xb0\xda\xff\xdc\xc2\xdd\xec\x9b\xb4\x29\xda\xe2\x21\xd5\xb3\x74\x90\x9f\x6c\x51\xc5\x2c\x2a\x22\xa6\xdb\xc4\x36\x3b\x7a\xc8\x43\xb6\x1d\xc7\x5e\xdd\x4f\x9c\xc2\xf8\x66\x37\xde\xd7\xe3\x5c\xc8\xd6\x74\x5d\x6f\xb5\x56\x10\x88\x73\x1b\x0c\xef\xe2\x5a\xad\xd1\x70\xf2\xc4\x4e\x21\x3d\xad\x74\x3e\xd4\x11\xfb\x61\x3a\x37\xec\xe9\x85\xc9\x9e\xed\xa5\x63\xe2\x6c\xea\xb6\x1d\xe3\x15\x7a\x76\x6e\x36\xd4\xb3\xcf\x9d\xeb\x3a\xc5\xd2\xf7\xf4\x00\x26\x9d\xf0\x95\x0e\x93\x6e\x3f\xdd\xa8\x8b\x9d\xef\x98\x6d\x0f\xca\xb8\xc2\x5f\x3b\x1a\x77\x7f\x5d\xb9\xb7\x81\x1b\x9f\xbe\xff\x04\x00\x00\xff\xff\xad\xf8\x51\x9f\x00\x40\x00\x00")

func templatesDaoPgxTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoPgxTmplSwp,
		"templates/dao/.pgx.tmpl.swp",
	)
}

func templatesDaoPgxTmplSwp() (*asset, error) {
	bytes, err := templatesDaoPgxTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/.pgx.tmpl.swp", size: 16384, mode: os.FileMode(420), modTime: time.Unix(1457935399, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoSqlxTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x5d\x6c\x14\x55\x1b\xc7\x0f\xe5\x7d\x11\x15\x2a\x6a\xa2\x57\x26\x87\xa5\xd4\xdd\xb2\x9d\x2d\xa2\x42\x20\x55\xd3\x76\x8b\x4d\x28\x95\xee\x52\x23\x95\xe0\x74\xe7\x6c\x19\x98\xdd\x99\x9e\x39\x6b\xb7\x59\x16\xbd\x10\xbd\x30\x31\x18\x13\xb9\x52\x88\xa2\x51\xb9\x30\x7e\x5c\x88\xde\xe8\x85\x37\x46\x13\x63\x34\xf1\x2b\x31\x31\x42\x40\x8d\xc4\xc4\xe0\x0d\x46\xff\x67\x3e\x76\xb7\xdb\x5d\x16\x42\x5b\x35\x9e\x7f\xf2\xeb\x99\x39\xe7\xcc\x33\xcf\x79\xce\x47\xe7\xcc\xec\x44\xcf\xd8\xd0\x30\xdd\xa8\xdd\x4e\xa0\x55\x84\x1c\x1c\x3b\x3d\x76\xe2\x93\xef\x97\x75\xb2\x25\x24\x33\xc1\x6d\x43\x90\x96\xf2\xeb\x75\x0b\xae\x9b\xc2\xcc\xce\x68\x96\x9d\xd1\xad\x06\xf5\x0e\xfa\x15\x13\xf7\x71\x7b\x1f\xcb\x08\x37\xe1\x30\xee\xda\x79\xdd\x4a\xb0\x22\xcb\x39\x96\xce\xbb\x27\xed\xc4\xf4\x7e\xd7\xc9\x24\x5c\x9e\x49\x4c\x9a\x62\x6f\x61\x42\xcb\xd8\xb9\x44\x61\x82\x71\xff\xe2\xb0\x6a\x42\x78\xa9\x60\x6e\xc2\xd0\xed\x84\x3b\x65\x15\x35\x81\x9c\xd6\xee\x2a\x29\xfd\xf7\x54\x10\xd9\xee\x4d\x2b\xc9\x86\xdb\xd6\xf7\xc8\xd3\x35\x91\xd5\xf4\xc6\x1b\x76\xfe\xdd\x5e\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\x2d\xa2\x84\xd3\x46\x1e\x41\xda\x16\x9e\x07\xe9\x92\xba\x74\x69\x90\xae\x0a\xd2\x42\x5d\xb9\x92\x92\x92\x92\x92\x92\x92\x92\x92\x92\x92\x92\x92\x92\xd2\x3f\x57\xba\x41\xc8\xf5\x48\xff\x90\x1b\xf9\x55\xd5\xfd\xff\x77\xd7\x11\xf2\x26\x78\x09\x1c\x07\x8f\x03\x03\x3c\x08\xc6\xc1\x5a\x70\xae\x9d\x90\x5f\xc0\x67\x60\x17\xd8\x02\xce\xae\x24\xe4\x2d\x70\x0c\x3c\x0f\x9e\x03\x37\x81\xf3\x2b\x60\x07\x1c\x05\x0e\xd8\x0d\xc6\xc1\x2e\xf0\xfa\xb5\x84\x1c\x02\x9b\xc1\x1a\x70\xee\x1a\xd8\x01\x67\xc0\x17\xe0\x65\x70\x0c\x1c\x05\x4f\x82\x71\xb0\x13\xc4\xc1\x72\xf0\xeb\xd5\x84\x7c\x03\xde\x06\x4f\x81\x3d\x60\x10\xdc\x03\x34\x10\x07\xeb\xc0\xd4\x72\x42\xb6\x82\x0b\x57\x11\x72\x0a\xbc\x01\x4e\x80\xd7\xc0\x11\xb0\x17\x4c\x00\x1d\x0c\x83\x5b\xc0\xcd\xe0\xb7\x65\x84\x7c\x0a\x4e\x82\x17\xc1\x01\x30\x06\x6e\x05\xed\x60\x39\x38\xff\x7f\xd4\x03\x3f\x83\x9f\xc0\x8f\xe0\x38\x38\x0a\xa6\xc0\x56\xb0\x09\xdc\x09\xee\x00\xe7\xfe\x87\xd8\x81\xf7\xc1\xb3\xe0\x09\x70\x08\x3c\x06\x12\xa0\x0b\x5c\x58\x4a\xc8\x57\xe0\x43\xf0\x0a\x78\x01\x3c\x03\x9e\x06\x87\xc1\x16\xb0\x19\xac\x00\x67\xdb\x08\xf9\x1a\x7c\x09\xde\x05\x47\xc0\xa3\x60\x63\x9b\xdf\xb7\x5b\x90\x6e\x00\xeb\xc0\x9a\xf0\x65\x0f\x85\xdc\x29\x8b\x6e\xee\xa5\x91\x81\xe4\xb6\x64\x3a\x49\x07\x47\x47\x86\x69\xa9\x44\x3b\xb4\xb4\x3e\x61\xb1\xed\x7a\x8e\xd1\xee\x72\x99\xde\x7f\x6f\x72\x34\x49\x4d\x83\xf6\xd2\x8e\xf5\x11\x92\x2d\xe4\x33\x34\x9a\xd3\x1d\x87\x71\xda\x55\x2a\x75\x68\xc3\xde\xb1\xac\x5f\x2e\xc7\xe8\x00\xb3\x98\x60\x51\xdb\x2f\x4b\x09\x5e\xc8\x88\xf4\x8c\xc3\xc2\x72\xc6\xb9\xcd\x69\x89\x12\xdc\xca\xcc\x52\x36\x45\x3b\xf2\xf2\x56\x11\xd3\x88\xd0\x72\x19\xd9\xd3\xa6\xd8\x1b\x64\xc2\x3d\x99\x8e\xf0\xb4\x3e\x49\x3b\xb2\x26\xb3\x0c\xaf\x0a\xd7\xf3\x93\x2c\xc8\x90\x95\xb4\x41\x79\xe4\x4a\x7f\x49\xd9\x6b\x1c\x67\xa2\xc0\xf3\xf2\x6e\xde\xe9\x9e\xb8\x3c\x94\x55\x45\x51\x93\xae\x18\xc9\x22\xcb\x44\x11\x82\x38\xb5\x63\xb3\xc2\x51\x2a\x15\x1c\x43\x17\x2c\xb5\x63\x5b\xc5\x6e\x35\x24\xe5\x72\x84\xcc\x89\x41\x5d\x08\xfc\xeb\xd3\x45\x3f\x08\x73\x62\x10\x87\x0f\xb4\xcb\xfb\xd9\x4a\xba\x58\x09\x08\x69\xec\xb8\x9f\x09\xd9\xda\x76\xc6\x0c\x77\x28\xef\x32\x2e\xd0\x17\x59\xdd\x72\x99\x57\x28\xa3\x88\xb6\xf5\x22\x56\xa6\x05\x43\x97\xdd\x5e\xd3\xb3\xd9\xbc\xbd\xb2\x76\xab\x36\xfb\x36\xe6\xa7\xcd\x55\xe7\xfd\xdb\x69\x03\x7d\x8b\xd4\x67\x4d\xbc\x5f\x08\x87\xe7\x2f\xe8\xad\x9d\xc6\x8c\x61\x79\xa3\x7e\x6e\x14\xe3\x72\xc0\xcc\x1e\x65\xb4\x88\xa1\x25\xef\x91\x37\xa2\x28\x37\x63\x95\x02\x8c\x32\x37\xa3\xe7\x93\x68\xe7\xea\x60\xa4\x55\x0d\x85\x25\x55\x3b\x61\x0e\x1a\xcb\xed\x69\x37\xf0\x2e\x85\xdc\x68\xad\x51\x6f\x86\xb3\xe9\x68\xc3\xb5\xc2\xab\x96\x45\x13\x3c\x0b\xdb\x59\x51\x44\x63\xc1\xf8\x36\x58\x96\x05\xf9\xfd\x96\xed\xb2\x68\xac\x76\x2a\xcc\x75\xd0\xcb\x0e\x5a\x8f\x8b\x6a\x67\xc7\x8e\x02\xe3\x33\x45\xbf\x97\x9c\x58\x5d\x38\x64\x7f\xad\xc3\x64\xcb\x09\x2d\xe5\x70\x33\x2f\xb2\xd1\xc8\xc8\xe0\x60\x2a\x99\xa6\x6b\x8d\x08\xba\x35\x9b\x75\x99\xa8\xdc\xdc\x3f\xa5\x77\xd1\x1e\x19\xf6\xd6\xa6\xb6\x0d\x0d\x0f\x49\x4b\x14\xa6\x2c\x33\x67\x56\x2d\x79\x67\x97\x6e\x68\x64\x74\x20\x39\x4a\xfb\x1e\xa0\x6b\x5d\x69\xcb\xe6\x06\xe3\x7d\x33\x55\xbf\xfc\x73\x19\x98\x48\x24\x08\x61\x38\x14\x53\x58\xfe\xfb\xd3\xb4\x2b\xfc\x07\xd0\x51\x3b\x0e\x83\xd5\xbf\x54\x9a\xbb\x0c\x63\xa0\xdc\x4d\xfd\x71\x5a\xf4\x87\xfe\x7e\x16\x1d\xdf\xdd\x70\xd9\x8f\xd3\x9e\x58\x30\x98\x5d\x61\x73\xe6\xff\x73\x18\x34\xf3\x46\x75\x30\xcb\xb3\x94\x65\x66\x58\xdf\x0c\x0a\xbd\x9b\x78\x93\x88\x1e\xa0\xf2\xca\x7e\xdd\x45\x35\x2c\x30\x0e\xad\x14\x37\x59\x5f\x2a\xed\xc7\x04\x11\x8c\x67\xf5\x0c\x2b\x95\x83\x00\xcb\xac\xb0\xdb\xe4\x71\x8c\x36\xf7\xd9\x9b\x3f\xb1\x39\xb3\x5e\xcd\x9b\x5e\xea\xf5\xa2\x5c\xe6\xd4\xec\xf9\x17\xcd\x9e\x66\x73\x67\x41\xa7\x4b\xa7\x3f\x8a\xbc\xac\xba\x55\x77\xd4\x9e\xae\x0c\x9d\xda\x91\xde\x59\xf4\x63\x3f\x7f\x91\xf6\x87\xca\x7a\x3f\xe0\x0f\xeb\x1c\x41\x6f\xd4\x08\x7a\x29\x61\xbe\xe2\xf5\x09\x41\xbc\xe2\x10\xce\x9e\x80\x17\x09\xe4\xe2\x07\xf1\x4a\x63\xd8\x38\x82\x97\x10\xb4\xa6\xfb\x02\xf8\x44\x04\xae\xa0\x75\x4f\x50\x88\xa2\x34\x86\x05\x6f\xa0\x8f\xe6\x6c\x83\x59\x5a\x32\xf8\x91\x79\x0a\x5d\x85\x55\x23\xbc\xaa\xb6\x05\xad\xaf\xaa\x3c\x6f\x99\x39\xc7\xc6\xd3\x3a\x1e\xf7\x3a\xfc\x43\x6d\xc8\x4b\x98\x11\x3e\xe6\x55\x7c\x0e\xaa\x4a\xa7\xfd\x3a\x9e\xd7\xa1\x01\x2c\x57\x91\xca\xc9\xc5\x7f\x1d\xef\x79\xd4\xb0\xf2\xbe\x9c\x6d\x72\x3b\xef\xfd\x62\x3e\xe2\xed\xff\x1d\xec\xdb\x3f\x6e\xf7\xf7\xff\xe1\xf7\xfd\x3f\xb1\xbf\xff\x08\xbc\x07\x4e\x82\x77\xc0\x43\xa0\x33\xd8\xfb\xff\x8e\xfa\x67\xc0\x69\x70\x0a\xfc\x00\xbe\x05\x9f\x07\xb6\x3e\x00\xaf\x82\xc3\xa0\xbf\x7d\x91\x5f\x6a\x28\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\x29\x2d\x84\xc2\x6d\x6e\x7d\xda\xf2\x33\x89\x28\x6a\x35\x9f\x46\x34\x6f\xbb\xdf\xd4\x58\xb3\x02\x3f\xf5\xfe\xce\xab\x23\xe1\x4b\x09\xf9\x26\x75\xd6\xcb\x93\x85\xf8\x50\x1a\x7e\x31\x6b\xf4\x62\xa3\xd1\x27\x33\x7a\x19\x9f\xa0\x2e\xde\xb2\xbf\x02\x00\x00\xff\xff\x6a\x62\x5a\x31\x00\x40\x00\x00")

func templatesDaoSqlxTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoSqlxTmplSwp,
		"templates/dao/.sqlx.tmpl.swp",
	)
}

func templatesDaoSqlxTmplSwp() (*asset, error) {
	bytes, err := templatesDaoSqlxTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/.sqlx.tmpl.swp", size: 16384, mode: os.FileMode(420), modTime: time.Unix(1457936204, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoPgxTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x58\x5b\x4f\xe3\x46\x14\x7e\xcf\xaf\x38\xb5\xd8\xca\xa6\xae\xd9\x7d\xad\x44\xab\x42\x12\x15\x09\x16\x36\x49\x55\x55\x55\x85\x4c\x3c\x0e\xee\xfa\xc6\xcc\x04\x82\x5c\xff\xf7\x9e\x33\xe3\x31\x76\x70\x36\x4e\xb2\xdb\xed\x43\x23\x94\xd8\x73\x39\x97\x6f\xbe\x73\x19\xa2\x24\xcf\xb8\x04\x2b\x4c\xa4\x35\x30\x2f\x8b\x48\xde\x2f\xef\xbc\x79\x96\x9c\xfc\xe5\xcf\x3f\xce\x4f\xf2\xc5\xca\x1a\x0c\x8a\x82\xfb\xe9\x82\xc1\x51\xb5\xee\x87\x53\xf0\x2e\xd4\xa3\x28\xcb\x7a\x73\x51\x54\xf3\xd5\x1c\x0b\xde\xfb\x09\x2b\x4b\x0b\xf7\xb3\x34\xc0\x95\x03\xf9\x9c\x33\x28\x0a\x6f\x1c\xa5\x01\xe3\x7a\x1a\x84\xe4\xcb\xb9\x84\x02\x86\x67\x70\x8c\x0a\xbd\xf3\x2c\x4d\x6f\xb2\x2c\x86\xb2\xde\x70\xe5\xe7\x79\xaf\x0d\x83\xc1\xc9\xc9\x74\xee\xa7\x02\xe4\x3d\x03\x9e\x3d\x41\x94\xca\x0c\x7c\x48\xd9\x13\x1c\xa3\x89\xde\x54\xed\x9e\xa1\x60\x2d\x6e\x10\x2e\xd3\x39\x08\xdc\x53\x14\xb0\x3e\x0d\x65\x39\x41\x19\x36\x09\x52\xaa\xf0\xcd\x01\xbb\x53\x90\x0b\x8c\xf3\x8c\x3b\x50\x34\x00\x43\x3f\x57\x2e\x1c\x85\x11\x8b\x03\x85\xdb\x98\x9e\x04\x7c\x8f\x8a\x01\x3f\x8f\x3e\x87\x47\x42\x8e\x16\xa2\x6f\xf8\xa8\xd6\x7a\x0d\x03\x0d\x7c\xb4\x1e\x55\x90\x18\xb4\xc7\x23\x37\xed\x1d\x54\xd1\xe7\xdb\x86\x2e\x17\xf7\x02\x4a\xae\x17\x38\xea\x3b\x0a\x95\x92\x6f\x4e\x21\x8d\x62\xf4\xc5\x6c\xe5\x4c\x2e\x79\x4a\x83\xca\x51\x35\xae\xf7\x71\x26\x48\x1f\x22\x6c\x77\xe1\xe2\xec\x60\x23\x8a\xf2\x6a\x08\xaa\xe3\x3e\x7d\x01\x08\x14\x1a\x4d\xa3\x2b\xab\x70\x9f\x4b\xa6\x0d\xca\x57\x04\x10\x4d\x06\xfc\xf1\xe7\xbe\x1c\x10\xb6\x92\x65\x48\x20\x90\x05\x1b\x84\x35\x78\x50\xb9\xb4\x8c\xa5\x42\x28\xf1\x3f\xb2\xcd\xbb\xde\xba\x78\xfa\x31\x4b\x0d\x28\x84\x1c\x09\x08\x58\xc8\xb8\xf2\xc4\x3b\x8f\x33\xc1\x6c\x3d\x1c\x66\xd5\xe0\x7b\xb6\x92\xb6\xd1\xb6\x1b\x1d\xfa\xb0\x4f\x4b\x6d\x11\xa5\x4d\x44\x51\x31\x71\x77\xf5\xaf\x19\xb9\x41\x99\x53\x3f\x6d\x62\xe7\x26\x86\xbe\xb0\xb4\x17\x53\x77\xf7\xa1\x07\x63\x37\x38\x65\x88\x71\x0a\x94\xdc\xd2\xc0\xae\x06\x5c\x9a\x71\xa0\x15\x60\x86\xe4\x7a\xbe\x26\xfa\x38\xe3\x89\x2f\x91\xdb\x9d\x94\x32\xc4\x17\x71\x34\x67\x18\x0e\xb8\x12\x0f\x0a\xee\x18\x2c\x05\x0b\x70\x16\xff\x04\xc3\xd4\xed\xa3\x65\xcb\x3c\xf0\x25\xc3\xdc\x8a\xdf\x09\x4b\xa5\xd0\x31\xc1\x56\x6c\xfe\x33\x5f\x88\xee\xb8\xb0\x1f\xbb\x35\x3b\x18\x68\xa8\x9c\xf1\xd0\x9f\xb3\xa2\x2c\x06\x8f\x7e\xac\x90\x6f\x0d\xef\x47\xd9\x75\xb4\x3b\x49\x43\xdf\x15\x6a\xa4\x9a\xd0\xaa\xd5\xac\x8b\x37\xe1\x6f\x0b\x99\x71\xa6\x1d\x6a\x16\x28\x07\xe8\xed\xec\xb9\xa5\x17\xfe\x06\xda\x74\xee\x0b\x5c\x61\xe7\x5d\x91\xd3\xa3\x4e\x90\xa9\xe2\x21\x26\x63\xac\xe9\xe8\x72\x74\x3e\x83\x63\x18\x4f\xae\xaf\x48\x9e\x37\xf3\xef\x62\x73\x94\xbf\xfd\x32\x9a\x8c\x70\x34\xc5\xd7\x6b\x3e\xf3\x17\x95\x1f\x8a\x6d\x3f\xc1\xe5\xc5\xd5\xc5\x0c\xde\x59\x4d\xba\x7c\x32\x9d\x69\x67\xbd\xe1\x99\xf7\x61\xc9\xf8\xb3\x1a\x79\xc0\xb8\xc9\x1d\x87\xc0\x3a\x10\x90\xd9\xaa\x1b\x12\x17\xe4\x4a\xa7\xd0\xd9\xea\xab\xc1\xd3\x1f\x23\xb9\xda\x1b\x9d\x29\xc5\xdc\xee\x9c\x71\x21\xe3\x28\xe9\xec\x19\x1a\x71\xe2\x42\x1c\x25\x91\xa4\x21\x9c\x0f\x43\xc1\xd4\x73\xef\x0a\xf4\x59\x20\xb4\x4c\x73\x60\x0c\xc4\x14\x6c\x59\x8d\x0c\x4c\x5a\xbe\x3b\x05\xec\x27\xbd\x69\xce\xd1\xbe\xd0\xb6\xae\x27\xc3\xd1\x04\xce\x7e\x87\x37\x02\xac\xda\x37\xa7\x0a\x51\x23\x51\x7b\xf7\x23\xbc\xdd\x22\x4d\x9f\xe2\x9b\x80\x44\xa9\x3d\xeb\x82\x2a\x6c\xb6\x4b\xba\x1e\x8f\xa7\x23\x12\x65\x19\x40\x9d\x66\xba\xc5\x9a\xe6\x9a\x02\xd7\x8e\x13\x43\x83\xae\x4e\x69\xbd\xfe\xb4\x93\x77\x8f\xe6\xe2\xb3\x71\xab\x4f\xf8\xfd\xcf\xb4\xff\x1a\xd3\x4c\xb6\xd9\x83\x63\x1b\x5a\xc4\xdd\xa8\x57\xdf\xd2\x2a\x0e\x26\xea\xce\xa5\x49\xd8\xbc\x7f\x39\x70\xa1\xda\x06\x3b\xa3\xb9\x8e\xda\xaf\x28\x51\xe1\xd2\xa2\x45\x51\xe8\x86\x63\xfa\xe1\xf2\x66\xb1\xaa\xcb\x7b\x93\x1c\xfa\xf0\x85\x4c\x90\x80\x39\xfd\x8c\x34\x38\xda\x18\x8a\xc3\x1b\xce\x72\x9f\x33\xdb\xea\x76\xe9\x56\xab\xb0\x5c\x54\x5a\x43\x58\x4b\xda\x74\xab\x31\x0b\x9a\xc7\x7c\x5b\x9f\xcc\x8b\xf2\x11\xb6\x43\x36\xad\xf5\xd0\x07\x77\x5b\x77\x94\x39\x9e\xe7\xb5\x8e\x82\xda\xd2\x72\x3b\xc0\xbf\xaa\x66\x6c\x2b\xc0\x6b\xe0\xea\x16\xee\x8b\x82\xab\x55\x1c\x06\xee\x57\xc6\x56\x93\x17\x53\x64\x37\xba\xed\x16\xe5\x70\x2a\xdf\x36\xe3\x5b\xbb\x88\xe1\xfd\x65\x89\xb3\xa3\x73\xfb\xd1\xa8\xdb\xb1\x7d\x8f\x6d\x63\x77\xae\x5a\xfa\xa2\x78\x8a\xe4\x3d\x1c\x51\xc5\x50\x17\xb8\x57\x95\x83\xfe\x2d\x40\xb9\xf2\xa1\x5a\x64\x45\x81\x45\x77\xaf\xad\x88\x0d\x59\xcc\x4c\xa8\x75\x5d\x64\x2a\x90\xda\xa7\x3f\xc4\xfa\x36\x1b\x99\xea\x06\x8d\xf2\x46\xe6\x56\x05\x2e\x0a\xb0\x9c\x1d\xbd\x3b\x3c\xe8\x02\x65\xe2\xbf\x93\xd1\xb2\xf5\xeb\xd5\x3e\x2c\xd4\x98\x1a\x16\x76\x75\x0d\x1d\x34\x3c\x04\xe1\x4f\x11\xb2\x8f\x47\xa6\xf4\xad\xff\xfe\x13\x00\x00\xff\xff\xee\x99\x3c\xd4\x25\x15\x00\x00")

func templatesDaoPgxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoPgxTmpl,
		"templates/dao/pgx.tmpl",
	)
}

func templatesDaoPgxTmpl() (*asset, error) {
	bytes, err := templatesDaoPgxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/pgx.tmpl", size: 5413, mode: os.FileMode(420), modTime: time.Unix(1457935374, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoSqlxTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x6d\x8f\xea\x44\x14\xfe\xce\xaf\x38\x36\xdc\x9b\x76\xc5\x72\xfd\x6a\x82\x26\x2c\x25\x92\xec\x5e\xb2\xb4\x89\x31\xc6\x98\x42\xa7\xeb\x68\xdb\xe9\x4e\x07\x29\xa9\xfc\x77\xcf\x4c\x67\x0a\x85\x22\x8b\x8b\x31\x26\xcb\x17\xda\x39\x2f\xf3\x9c\xe7\xbc\xcc\x94\xa6\x39\xe3\x02\xac\x67\x2a\x7e\x5d\x2f\xdd\x15\x4b\x87\xbf\xa5\x8c\x72\x96\x0d\x8b\x97\xa4\xb4\x7a\x1d\x0a\xeb\x25\xe1\x4b\xce\x22\x31\x24\x25\x49\xf3\x24\xe4\xc3\x94\x45\x24\xd9\x2b\xc7\xa9\xb0\x7a\xbd\xaa\xe2\x61\xf6\x4c\xa0\xaf\x97\xbf\x19\x81\x3b\x53\x8f\xc5\x6e\xd7\xe8\x56\x95\x96\x6b\x19\x89\x3e\x87\x29\xd9\xed\x2c\xb4\x27\x59\x84\x9a\x3d\xb1\xcd\x09\x54\x95\x3b\xa5\x59\x44\x78\x2d\x86\x42\xf0\xf5\x4a\x40\x05\x93\x31\xa8\xed\x5d\x4f\xa3\xf1\x11\x38\xec\x1a\xab\xc7\x30\xcf\x5f\x6f\xb5\x47\x1d\x53\x92\x44\x0a\xf4\x54\x3e\x49\xcc\xf1\x3a\x5b\x81\x5d\x08\xc6\x09\xdc\x21\xf0\x16\x22\x07\xe4\xdb\x78\x8b\xeb\xca\xd4\x95\xcb\xf0\x27\x48\xa3\xfb\xb0\x40\x0d\x3b\x87\x46\x18\x20\x3a\x63\x67\x2b\x5f\xbe\x82\xb6\x5f\x1f\x00\xe1\x9c\x71\x07\xaa\x1e\xe0\xef\x8f\x90\x43\x09\x5d\x8a\x4a\x8c\xd9\x92\x58\x2d\xdf\x7b\xf0\xee\x03\xb8\x83\xe9\x62\xfe\xa8\xd4\x83\x70\x99\x68\x4d\xf8\xe1\x7b\x6f\xe1\xe1\x6a\x86\xaf\x73\x1e\x84\xcf\x3a\x4c\x14\x8d\xe0\x3b\x78\x98\x3d\xce\x02\xf8\xda\x52\x1e\x71\x77\xe9\x51\x45\xeb\x4e\xc6\xee\xd3\x9a\xf0\xed\x82\x6d\x4a\x1b\xf7\x1a\x40\xee\x68\x20\xfe\x2a\xcc\xec\x8f\xa5\x03\xca\x8a\x13\xb1\xe6\x19\x7c\x2c\x15\xfc\x1e\x12\xfa\x46\xd2\x82\xb2\x9b\xb6\x01\x88\x12\xee\x64\x91\xba\x41\xf9\x66\x0e\xe1\x5f\x22\xf1\x90\x49\x51\x5e\xe4\xf0\x9f\x53\xe8\x27\x74\x45\xae\x2f\xbe\x01\x30\x8e\x9e\xc6\x5b\xa0\x99\x20\x3c\x0e\x57\xa4\xc2\xc5\x84\xa6\x54\xc8\x25\x94\xc7\x71\x41\xd4\x33\x92\xfc\xd3\xcf\xaf\xa1\xb9\x94\xd1\xa6\xe1\xef\xe4\xbc\xfe\x27\xe7\x76\x84\xd7\x4c\xd3\xb8\x09\xe5\x0b\xf4\x68\x69\x2c\x66\x97\x2f\x47\x80\x53\xc9\xf5\x73\x8e\x91\xc4\xb6\x35\x5f\x4c\xbc\x05\x8c\x7f\x84\x0f\x05\x58\x0d\x0b\x35\x2a\x64\x5c\x7b\xac\x79\xf8\x16\x3e\x5d\xf0\x56\xe7\xfc\x43\x24\x5d\x29\x9b\x63\x47\x9a\xc5\xcb\x9e\xe6\xd3\xa9\xef\x49\x57\x96\xa1\xde\xb8\x52\xa5\xc1\x36\xc5\xa0\xbb\x33\x9b\x92\x32\x5b\x4a\x2d\x64\x22\xa3\x09\x8e\x3b\x5d\x53\x75\x49\x69\x67\x11\x89\x09\x57\x2e\xdd\xfb\x84\x15\xc4\xae\x4d\x63\xa6\x17\x3f\x93\x52\xd8\xce\x01\x5e\x2a\x77\xcd\xc8\xc6\xee\xca\xa9\xb3\x0f\x0b\x8b\xd9\xab\x21\x2a\x3f\x07\x25\x4e\xf7\x5a\x88\xd0\x28\x9e\xa2\x34\x92\x5d\xa3\x5e\x62\xaa\xe5\x20\xcf\x22\x1b\x83\xa0\x2d\x52\x9a\xd8\xd0\xcb\xad\xda\xe5\x55\x63\xe7\xbd\x7b\xfe\xbf\xdd\x63\xa6\xf1\x7b\xdf\x98\xbe\x69\xee\x5b\xba\x81\x52\x75\x71\x92\x1d\xd4\xba\x43\x39\x58\xcd\x05\xe1\xc2\x66\x4a\x74\x12\x4f\x5d\xcd\x3a\xfc\x56\x9d\x56\x55\x6d\xe9\x3f\x3d\x98\x4b\x15\x1c\x96\x6a\x5d\x8a\xbf\x34\x29\xaa\x01\xc8\x09\x27\xe5\x11\xde\xd4\x56\x75\xb2\x58\xeb\xa0\x6c\x1d\x92\x67\x41\xaf\xf3\x28\x14\xe4\x22\xe8\x23\xc0\xb5\xd5\x7f\x02\xb8\xe6\x0a\xe7\x50\x37\xe4\xa3\xfb\xcf\xcd\x48\xc7\xbe\xe8\x06\xaf\x5b\x63\xa4\x8b\xce\x54\x18\xc3\x7a\x27\x51\x31\x53\x9b\x60\xb1\xc5\x61\x52\x90\xd3\x2a\xbb\x26\x49\xd7\xc6\xfc\xa6\x9c\x9d\x8d\xb7\x05\xfc\xec\x57\x01\x7c\xb5\x93\xd2\x0d\x7e\x1e\x41\x5f\x8e\x58\xd5\xeb\x27\xa3\x16\x55\x14\x81\x2f\x5a\xc9\xa2\x91\x05\xcd\x17\xc5\x9e\x8f\xfe\x11\x21\x13\x92\x10\x53\xb5\x1d\xb3\xc3\x50\xd0\x4e\xf9\x04\xcf\x83\xc0\x33\xa7\x01\x1c\x1c\x07\x12\xad\x3e\x10\x68\x84\xc9\xea\xe3\x35\xf5\x6c\x0d\x1f\x30\xe2\xb6\x0e\x4a\x33\xb4\xfe\x3e\xb5\xdd\xa1\x98\xdc\x76\x1d\x6b\x5d\xc9\xbd\x61\x64\x98\xe9\x2b\x43\x6a\x46\xe2\xf1\xff\x5f\x01\x00\x00\xff\xff\x07\xbb\x8a\x29\x37\x0f\x00\x00")

func templatesDaoSqlxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoSqlxTmpl,
		"templates/dao/sqlx.tmpl",
	)
}

func templatesDaoSqlxTmpl() (*asset, error) {
	bytes, err := templatesDaoSqlxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/sqlx.tmpl", size: 3895, mode: os.FileMode(420), modTime: time.Unix(1457936202, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/dao/.pgx.tmpl.swp": templatesDaoPgxTmplSwp,
	"templates/dao/.sqlx.tmpl.swp": templatesDaoSqlxTmplSwp,
	"templates/dao/pgx.tmpl": templatesDaoPgxTmpl,
	"templates/dao/sqlx.tmpl": templatesDaoSqlxTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"dao": &bintree{nil, map[string]*bintree{
			".pgx.tmpl.swp": &bintree{templatesDaoPgxTmplSwp, map[string]*bintree{}},
			".sqlx.tmpl.swp": &bintree{templatesDaoSqlxTmplSwp, map[string]*bintree{}},
			"pgx.tmpl": &bintree{templatesDaoPgxTmpl, map[string]*bintree{}},
			"sqlx.tmpl": &bintree{templatesDaoSqlxTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

