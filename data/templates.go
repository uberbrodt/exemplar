// Code generated by go-bindata.
// sources:
// templates/dao/.pgx.tmpl.swp
// templates/dao/.sqlx.tmpl.swp
// templates/dao/pgx.tmpl
// templates/dao/sqlx.tmpl
// DO NOT EDIT!

package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDaoPgxTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\x5b\x6c\x1c\x57\x19\xc7\x4f\x93\x60\x63\x42\xa1\x10\x84\x44\x90\xaa\xe3\x6d\xda\xcc\x1a\x7b\xd6\x36\x55\xe3\x58\x5a\x57\xb1\xbd\x56\x2c\x9c\xac\xed\x5d\x5c\x95\x10\x59\xe3\xd9\xb3\xee\xc6\xb3\x33\xc3\xcc\xac\xb3\x66\xba\xa5\x45\xa2\x11\x22\x6f\xd0\x22\x24\x2e\x2f\x3c\xf0\xc4\xe5\x81\x22\x71\x91\x4a\x45\x11\x97\xb8\x0a\xa2\xa1\x7d\x0b\xe2\x52\x09\x25\x79\x80\x40\x02\x91\x90\xf8\x9f\xb9\xec\xce\xde\xb2\x6b\xc7\xb9\x28\x9c\xbf\xf2\xcb\xec\xcc\x9c\x73\xe6\x9c\xef\xfb\xce\xcc\x7c\xc7\xb3\x32\xbc\x34\x7b\x8c\x1e\x92\x1f\x27\xd0\x43\x84\x58\x5f\xbb\xb8\xf4\x54\x79\xb3\x67\xfc\xbb\x84\xa8\x2b\x96\x91\x73\x48\x47\x15\xcc\xa1\x91\xc3\xa3\x43\x23\x4f\x8c\x0d\x8d\x0c\x8d\x8e\xc8\x4c\x1d\x95\x0b\xba\xc3\x2c\x5d\xd1\xa2\xe5\x9e\xf3\x1b\x4c\xcc\x5b\xc6\x29\xa6\x3a\x76\xc2\x64\x96\x6d\xa0\x50\x82\x95\x59\xd1\xd4\x14\x6b\x68\xd5\x48\x9c\x5e\xb3\x4d\x35\x61\x5b\x6a\x62\xb5\xe0\x3c\x53\x5a\x91\x55\xa3\x98\x28\xad\x30\xcb\xaf\x1c\x16\x4d\x38\xde\xd6\x61\x76\x22\xa7\x18\x09\x73\xb5\x2c\x3b\x38\xd0\xb9\xb7\x42\x42\xff\x87\x2a\x39\xf9\xa1\xb1\x07\xc9\xc7\x47\x47\x86\xf9\xee\x23\xb1\x7e\xba\xef\x83\x9f\xbc\xdb\xbd\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\xba\x83\x72\xcc\xdd\xe4\x73\xd8\xee\x0a\xf6\xd3\xc1\xf6\x81\x86\xed\x9e\x60\xfb\x58\xb0\x5d\x68\x38\xbf\x3b\xd8\x1e\x0e\xdb\x6d\x38\x2f\x24\x24\x24\x24\x24\x24\x24\x24\x24\x24\x24\x24\x24\x24\x74\xf7\xa4\xe4\x08\x79\x0d\xc9\xfd\xfe\x1e\xe2\xfd\xfd\x3f\xcc\xff\xaf\xbe\x9f\x90\x0b\xe0\x4d\xf0\x0a\xf8\x0a\x38\x0b\xbe\x04\x3e\x05\x06\x40\x1c\x48\xe0\xfa\xfb\x08\xf9\x36\x78\x0e\x2c\x81\xe3\xe0\x30\xd8\x07\xfe\xfb\x20\x21\xff\x00\x97\xc1\xdb\xe0\x55\xf0\x63\xf0\x12\x30\xc0\x51\x90\x04\x03\x40\x02\x07\xc1\xd5\xf7\x12\xf2\x75\x70\x02\x4c\x03\x19\xec\x01\x6f\xef\x25\xe4\xd7\xe0\x7b\xe0\x0b\x60\x0d\x7c\x1a\x2c\x82\x71\xf0\x30\xf8\x10\xb8\xf4\x1e\x42\x7e\x0e\x5e\x06\x67\xc0\x32\x78\x1a\x1c\x01\x4f\x82\x09\x70\xb1\x8f\x90\x2f\x03\x17\x2c\x80\x27\xc0\x41\xd0\x0f\xf6\x81\x0f\x80\x87\xc0\x3f\xdf\x4d\xc8\xb3\x60\x00\xbc\xd3\x4b\xc8\x5f\xc0\x9f\xc1\x49\xb0\x17\xf4\x80\x5f\xc1\x76\xbf\x04\xaf\xf7\xf8\x76\x74\xde\x45\xc8\x4f\xc0\x19\xf0\x02\x78\x1e\x14\xc1\x04\x18\x03\x87\xc0\x23\xe0\x2a\xec\x7e\x05\xbc\x0e\xbe\x05\x0c\x50\x04\x1a\x78\x65\x37\xc6\x07\xb2\x80\x82\xfd\xe0\x23\xa0\x07\xbc\xb5\x8b\x90\xdf\x81\xf3\xe0\xa7\xe0\x2c\x78\x11\xe4\xc0\x04\x38\x08\xae\x3f\x40\xc8\xbf\xc0\x15\x70\x39\x5c\x84\x71\x5d\xa6\xe7\x2a\x15\x52\x21\x14\xb2\x98\x53\xb2\x74\x6a\xab\x8a\xee\xba\xf4\x80\x9c\x71\xac\x92\xea\x64\x37\x4c\x76\x5c\x29\x32\x5a\xa9\x2c\x1a\xa7\x6d\xc9\xc2\x7f\x71\xaf\x7c\x8e\xe5\x99\x45\xf9\xbe\x3c\xa5\x19\x36\x93\xfc\xc3\x85\x3c\x65\x96\x45\xfb\x93\x54\x2f\x68\xd4\x0d\x9b\xc5\xce\xa0\x77\x22\xb8\x18\xaa\xf9\xfb\xe3\x49\xea\x94\xe5\x85\x12\xb3\x36\x24\xfb\x33\x28\x64\xfa\xed\xf8\xe5\xb8\x70\x94\x7e\x2c\x49\xf3\x45\x47\xce\x98\x56\x41\x77\xf2\x52\x2c\x3d\x33\x93\x49\x65\xe9\xa3\xb9\xd8\x20\x35\xf2\x79\x9b\x39\xd5\xab\xfb\xbb\x74\x82\x0e\x53\x97\x74\xd1\xd4\xdc\xec\xb1\x59\xde\x12\x45\x53\x5a\xa1\x58\xa8\xb5\xe4\xed\x75\xdf\x50\x7a\x71\x3a\xb5\x48\x27\x9f\xa6\x8f\xda\xbc\x2d\xc3\xca\x31\x6b\x72\xa3\xd6\x2f\x7f\x9f\x5b\x26\x16\x43\x8b\x61\x33\x30\x40\x2c\x93\x9a\x4b\x4d\x65\xe9\x00\x9d\x59\x4c\x1f\xa3\xae\x7b\x40\xce\x2a\x2b\x9a\x67\xf8\x4a\x85\x3e\x75\x34\xb5\x98\xc2\x51\x1d\xbb\x69\x2b\xab\xac\xd2\x03\xf9\x02\xd3\xe0\x3a\x9a\xa4\x4f\xd2\x18\xc9\x97\x74\x95\x4a\xb6\x63\x58\x8c\x0e\xf0\xda\xd3\x47\xd2\x7e\xdd\x38\x9d\x29\xe8\xb9\x8c\x56\x50\xd9\xe4\x06\xce\x78\xf5\x64\xcf\xa1\xcf\x52\x5e\x6d\x4a\xb1\x51\x2c\x5b\x96\x4c\x5a\x3d\x1d\xfa\xbc\x52\x19\x84\x6f\xe8\x00\xff\x98\x26\x5b\xae\x8e\x88\x7a\x1f\xf3\xe4\x15\x95\xb9\x95\xc0\x64\xfc\x50\xe8\x08\xfe\x3b\x4e\xa5\x13\x27\xbd\x9e\xd4\x47\x11\x6f\x11\x4e\x37\xac\x38\x37\xe9\xf6\xe2\x6e\x1b\x01\xe6\x59\x46\x9e\x9e\xbc\x37\xc3\xac\xc9\x7b\xdc\x65\x5b\x72\x5f\x3b\xe7\xed\xa4\xc3\x5a\xf6\x92\x59\xf7\x5c\x3f\xb7\x16\x58\x52\x78\xef\xe1\xbf\x83\xb8\xf0\x1d\xb3\x73\xf3\xd3\xf7\xfc\x48\x8b\x69\xda\x6c\xc2\x5b\x9d\xa4\xb0\xcf\x4e\x5a\xa7\x7e\xe2\x34\xd9\xe8\x9e\x32\x4f\x6b\xe3\x74\x61\x10\xd7\xb5\x14\x7d\x95\x05\xbd\xe2\x03\xc2\x95\xf1\xcb\xc6\xa3\xd1\x33\x56\x60\xaa\x75\x45\xb3\x23\x13\x1d\x56\xc3\xe3\x93\x0e\x55\x6a\xf3\x7e\x5d\xae\xeb\x1e\xae\x12\x94\x0c\x2e\xc0\xc7\x83\xfb\x68\xd3\x85\xbc\x46\x78\xf3\xfc\xd8\x89\x93\x91\x69\x80\xee\x79\x66\x61\x65\xa6\x1e\xb1\x56\xed\xd6\xae\x92\xd6\x69\xcb\x41\xc6\xeb\x1b\x73\x49\x22\x31\x63\x58\x45\xc5\xa1\x4a\xeb\x0a\x7c\x8a\x19\x38\x69\xf3\x99\x4c\x9d\x67\x50\x12\xf1\x41\x57\x18\x2d\xd9\x2c\x87\xb3\xf8\x67\x33\x0b\xf5\x31\xf2\x92\x99\x53\x1c\x86\x9b\x2b\xfe\x2f\x32\xdd\xb1\x1b\x42\xcb\x62\x76\x49\x73\x70\x17\xc6\xad\xb9\xe1\x06\x19\x9c\x82\xff\x15\xd3\x84\x15\xa5\x6a\x59\xfc\x88\xd3\x76\xf6\xc5\xc9\x46\x0b\xa3\x89\x75\x1c\xf2\x2c\x4b\x2b\x95\x2d\xd8\x3b\xd2\x28\x3f\xa5\xb3\xd3\x52\x4b\x1b\x56\x0b\xd6\xaa\x44\x06\x19\x3e\x76\xaa\xe7\x1a\x1e\x4f\xd5\xe3\xf1\x76\x83\xe2\x7a\xac\x3a\x86\xad\xc5\x4c\x58\x3f\x78\xce\x79\x2f\x63\x19\x78\x4c\x6a\x1b\xa1\x8a\x45\x23\xd7\x6a\x35\x63\xb6\x78\xf9\xbc\x11\xbc\x04\x1e\x67\x65\x47\x8a\x07\x23\x6e\xf3\x72\x18\xfa\x1d\xed\x14\x95\x35\xd6\xfe\x5e\x3e\x3c\x88\x2e\x68\x4c\xaf\x4d\xc5\xb8\x3f\x11\xba\x78\x4d\xf0\xef\x85\x7c\xb7\xab\xa7\x45\x22\xc1\x2d\x66\x23\xda\x99\xd7\xe1\x70\x0e\x20\x20\x68\x9b\xda\x41\xa0\xd7\xe2\xdc\x8f\xf1\x06\x7b\x77\x11\xad\xdd\x9b\xb9\xab\x28\x8d\x06\x75\x73\x74\xb6\x8a\xcc\x78\x63\xa7\x9b\xa3\xb1\xfb\x3e\xd6\xa2\x30\x08\xc2\x30\xc1\xe8\x36\xf2\xba\xbb\x54\xe7\x38\xa0\x3c\x0e\xaa\x61\xd0\xc5\x23\xa0\x21\x06\xa2\x21\xd0\x26\x00\x88\x83\x1d\x0c\x02\xa7\xf0\xbc\x0a\xbc\x6b\x7b\xc5\xf0\x4e\x3a\x3d\xe9\x5f\x7d\xca\xd0\xf5\x79\xc3\xd0\xe0\x99\xb0\x7c\xf4\xa1\x76\xd3\x0a\x55\xeb\x15\x8a\xa6\x81\x5b\x6e\x8c\x1b\xcf\xfb\x29\xcf\x7a\x1b\x16\xbc\x24\xc6\x22\x76\xf3\x8b\x72\x83\xf9\x65\xbc\x67\x58\xd8\x40\xe4\x03\xfa\x53\x8a\xba\xa6\xf2\xaf\xe4\x63\xd5\xb3\x78\x5b\x8d\x79\xf9\xff\x35\xe4\xb6\xd7\xfa\xfc\xfc\x3f\xfc\xfb\xfd\xdf\x90\xd7\xff\x06\xfc\x0c\x7c\x03\x7c\x15\xbc\x14\xac\x03\x4c\x81\x41\xd0\x0b\x6e\x20\xc7\x7f\x13\xbc\x01\xce\x81\xdf\x82\x17\xc1\x0b\x60\x1e\xec\x01\x97\x90\xd3\xff\x1e\x6c\x82\x73\xe0\x79\xa0\x81\x34\x98\x05\xe3\x60\x0c\x1c\xe2\x6b\x05\xc8\xf3\xff\x0e\x5e\x05\x4e\xb0\x06\x30\x05\x92\xfc\x38\x72\xfb\x3f\x81\x3f\x82\x8b\xe0\x2c\x38\x03\x96\xc0\x87\xc1\x2e\xf0\x57\x9e\xdb\x83\xf3\xe0\x0d\xb0\x09\x3e\x0b\x36\xc0\x51\xd0\x0b\xfe\xdd\xe7\x8f\xf7\x35\xf0\x8b\xbe\x3b\xbd\xe2\x22\x24\x24\x24\x24\x24\x24\x24\x74\xab\xaa\x4b\xc1\xc3\x57\xff\xe5\xe8\x5a\x7b\xaa\xcc\x54\x7f\x1d\x27\x5c\x55\xd8\x4e\x9d\x36\x2b\x11\x46\x5c\x96\xe5\xfa\xd5\x21\xd7\xf5\x57\x0a\x32\x0b\x73\xf3\xab\xe5\xea\xab\x7c\x74\x8d\x28\x46\x9a\x57\x7f\x22\x2f\xd6\xf1\x60\xad\x21\x5b\x96\x0c\x7e\xb2\xc5\xab\x7c\x74\x09\xcc\x7b\xad\x6f\x5a\xe9\x0a\xc7\x55\xcd\x73\x0c\xa4\xac\x2c\x67\xcf\xfa\x2b\x1a\x49\x9a\x57\x34\x9b\x45\x33\xa5\x64\x34\x53\x6a\x6d\x8e\xed\x58\xc3\x5f\x42\xb9\xa9\x35\x78\x85\x0e\x16\xf1\x5b\xd9\x11\x8b\x2c\x37\x2f\x94\xfb\x03\x74\xf8\x02\xf6\xc2\xdc\x56\x9c\xde\x94\x82\x9a\xbc\x95\x54\x2d\x05\x0d\xf7\xeb\xf3\x50\x7e\x70\xb0\x76\x2e\xda\x95\x79\x8b\x99\x8a\xc5\xa4\x58\xeb\x8b\x2f\xfb\xa1\x11\x1b\x84\x81\x6f\x57\xdc\xb5\xb1\xf1\x6d\x8f\xb4\x5b\x73\xc7\x5d\xf2\x87\x1f\x98\x2d\xfd\xb1\x93\x91\xdf\xad\x4f\x9a\x0c\xe0\x0f\xa4\x76\x43\xe1\x33\x25\x58\x72\xac\x50\x06\xc7\x44\x16\xed\xea\xaa\xd4\x66\x9c\x57\x25\x34\x60\xbd\x73\xdd\x0e\x9d\xcf\x28\xeb\xdb\xbc\x8d\xdd\x74\x20\xf0\x79\xf7\x43\x40\xe1\x76\x9d\xe7\xf9\xff\x05\xe4\xc4\x5f\x44\xee\xcc\xf3\xff\xf0\xfb\xfe\x1f\x22\xb7\xff\x26\x38\x05\x72\x40\x05\xf3\xa0\x1f\x7c\x14\xec\x07\x3d\xe0\x0f\xc8\xef\xcf\x83\xef\x80\xcf\x83\xc5\x20\xef\x4f\x83\x97\x91\xcf\x7f\x02\x3c\x0e\x08\xb8\x81\x1c\xfe\x3f\xe0\x1d\xf0\x23\xf0\x03\xf0\xfd\xe0\x6f\xfd\x1a\xc8\x07\x7f\xef\x7f\x18\xf4\x82\xb7\xd0\xa7\x0b\x60\x13\x9c\xdb\x1b\xf4\x51\x48\x48\x48\x48\x48\x48\x48\x48\x48\xe8\x3e\x50\xbe\x73\x16\xd1\x39\x01\x12\xdf\x77\xde\xaf\xdf\x77\x6e\xe3\xdb\x3b\xf1\x89\xa7\x88\xb4\xce\x91\xf6\xbf\x00\x00\x00\xff\xff\xcc\x98\x8c\x22\x00\x50\x00\x00")

func templatesDaoPgxTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoPgxTmplSwp,
		"templates/dao/.pgx.tmpl.swp",
	)
}

func templatesDaoPgxTmplSwp() (*asset, error) {
	bytes, err := templatesDaoPgxTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/.pgx.tmpl.swp", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1457494398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoSqlxTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xdb\x7d\x68\x14\x67\x1e\x07\xf0\xc7\xc4\xbc\xa8\x97\x44\x3c\x39\xf0\x14\xee\x71\x2f\x9a\xdd\x5c\x32\x9b\xe4\x44\xa3\x18\xc5\x98\xcd\x5d\x34\x26\x26\x9b\x33\x8a\x77\x27\x93\xdd\x67\xe3\x98\xdd\x9d\x75\x66\xd6\x6c\xd8\x8b\x9e\xa2\x72\x77\x70\x77\x2d\x2d\xf6\xcd\xd6\x3f\xb4\x20\xa2\x56\x5b\x8b\xa0\x6d\xe9\x8b\xfd\x47\xf0\x0f\x69\xb1\x48\xa1\xb6\x14\x0b\xa5\x6a\x5b\x04\xa1\xb6\x62\xbf\xf3\xcc\xec\x4b\xb2\x49\x36\x31\x56\xd9\xf6\xf9\xc1\x87\xc9\xbc\x3d\x79\x9e\xdf\x3c\xcf\x38\x93\x79\xec\xa9\xd9\xd0\xb2\x8e\x2e\x91\x16\x11\xc4\x4c\x42\xe6\x1e\xbd\xb6\x81\x9e\xb8\x54\xb8\xec\x24\x21\xbe\x1e\x4d\xf5\x1b\x24\x6b\x28\x91\xea\xda\xa5\x75\xd5\xb5\x8b\xeb\xab\x6b\xab\xeb\x6a\x25\xe6\xab\x93\x94\xb0\xc1\xb4\xb0\x1c\x4c\x3f\x6e\xa7\x55\xa0\x7b\xbd\xa6\x6e\x63\x3e\x43\x77\x47\x98\xa6\xab\x38\xc8\xcd\x62\x2c\x14\x09\xca\x5a\x75\xaf\xea\xee\xef\xd3\x23\x3e\xb7\xae\xf9\xdc\xbd\x8a\xb1\x35\xda\x23\xf9\xd4\x90\x3b\xda\xc3\x34\xeb\xe4\xc4\xa1\x6e\x83\x2f\x0d\xa6\xbb\xfd\xb2\xea\xd6\xb7\x07\x63\x92\x81\x2d\xd9\xab\x2b\x42\xc4\x2f\x2f\xa2\x46\xa0\xba\xbe\x84\xfc\xb1\xae\xb6\xc6\x5c\xfd\xbd\x63\x3e\xfd\xf5\xac\xbf\x3c\xee\x5a\x89\x10\x21\x42\x84\x08\x11\x22\x44\x88\x10\x21\xe2\x11\x86\x11\xc9\x27\xbb\xb0\xcc\xb3\xd7\xa7\xdb\xcb\x29\xc3\x96\x53\xed\xe5\x76\x7b\x39\x63\xd8\xfe\x7c\x7b\x59\x68\x2f\xe3\xc3\xf6\x8b\x10\x21\x42\x84\x08\x11\x22\x44\x88\x10\x21\x42\x84\x08\x11\x22\x1e\x5f\xc8\x7e\x42\x8e\x97\x12\xf2\x0d\x98\xdf\xff\x13\xef\xff\xd7\xca\x08\x79\x15\x5e\x86\x23\xb0\x1f\xfc\xf0\x57\xd8\x0c\x0b\xca\xac\x73\x8a\xb1\x7c\x0a\x4b\x03\x1c\x70\xa3\x84\x90\xab\xf0\x11\x5c\x81\x4e\xa8\x83\x4f\x7f\x45\xc8\xc7\x70\x1c\x9e\x83\x67\xe0\x00\xdc\x9a\x41\xc8\x05\x18\x80\x1e\x90\xc0\x09\x15\x30\x1b\xae\xa3\x42\xd7\xe0\x13\xb8\x08\xcf\xc3\xd3\xd0\x07\x7f\x82\x1a\xf8\x2d\xdc\x9e\x46\xc8\x25\x78\x09\xf6\xc1\x2e\x08\x41\x1f\x6c\x83\xd7\x8a\x09\xf9\x37\xac\x80\x0a\xb8\x5d\x44\xc8\x4d\xb8\x01\x57\xe1\x18\x1c\x81\xc3\xf0\x7f\xd8\x02\x9b\x60\x31\xcc\x82\xef\x0b\x51\x17\x78\x0b\x9e\x05\x05\xd6\xc3\x1a\xa8\x87\xc5\x20\x41\x35\xdc\x2c\x40\xdb\xe1\x2c\x1c\x83\xff\xc0\x5e\xd8\x03\xbb\xa1\x0e\xe6\xc2\x9d\xa9\x84\x7c\x09\xef\xc1\x9b\x70\x1e\xce\x41\x0c\x74\xf0\xc0\x3c\x28\x86\xaf\xf2\xf1\xfb\xe1\x0a\x7c\x08\x1f\xc0\x93\xf0\x04\xf4\xc0\x52\xa8\x04\x27\x54\x98\xc7\xe5\x11\x72\x19\x0e\xc3\x3f\x21\x08\xed\xd0\x02\xcb\xa0\x1e\x96\xc0\xd2\xbc\x07\xeb\x37\x83\x84\x22\x34\x66\x44\xb5\x30\x65\x9a\xc6\x57\xad\x8d\x08\x55\x6a\x63\xcc\xaf\xb7\x84\x75\xa6\x19\xb4\x81\x06\xe4\xa0\xce\xf8\x4e\x25\x60\x1e\x4d\x1b\x1a\x68\x58\x09\xd2\x38\xdf\xb6\xa5\x8a\x6f\x5b\xd6\x40\x8d\x98\xd4\x26\x87\x98\xdf\x13\x63\x3e\xa7\xbe\x3d\x58\x45\x55\x17\x3f\x04\x3f\x9b\xfb\x1d\xf1\xb8\xc2\xcb\xf4\x76\xb4\x52\xa9\x59\x61\x41\xbf\x4e\xa5\x2e\xb9\x27\xc8\xcc\xf3\x06\x07\x1d\xfc\x68\x12\x88\x86\x7d\xd4\xa9\x1b\xaa\xc6\x68\x65\x3c\x2e\x35\xad\x6a\xb7\xf6\xbb\xa8\x75\x7e\x57\xcc\xa9\xf2\x3d\x5e\x43\x8b\xfa\x8c\xae\x81\x88\x5d\x40\x15\xea\x40\x2b\xf9\x6c\x92\xae\x98\xcb\xac\x97\xaa\xa1\x9a\x23\xb7\x37\x55\x71\xfe\xab\xa4\xa6\xc6\xac\xd5\x8f\x46\xfc\xb2\xc1\x46\xaf\xfe\x58\x55\xb7\xce\x1d\xa5\xe2\xd9\xea\x3a\xe9\x6b\x33\xee\x26\x3e\x9c\x2b\x34\xde\x66\x26\xdb\x95\x68\xb0\x55\x4f\x2b\x57\xe6\x65\x36\xaf\xa8\x8b\x5a\xc7\x52\x86\xb6\xda\x2d\xcb\x38\x25\xd5\x33\xf8\x29\x89\x94\x0c\xcd\x57\x7c\xac\x9a\x7b\xe5\x1d\xec\x01\x7b\xd6\x98\xcd\x70\xaa\x13\x68\x80\x53\x7d\xd0\xaa\x67\x4f\x79\x3c\xce\xc2\xfe\xc1\xc1\xa1\x3d\x2c\x56\x65\xf6\x97\x61\xad\x88\xa1\x67\xc9\x91\x08\x0e\x77\x62\xbf\xe2\x4a\xee\x40\xb5\x74\x9f\x1c\xf6\xa0\x53\xcd\xb7\x3b\x5a\xaa\xa0\xc4\x9e\x54\x39\x89\x2d\xe8\x5a\x9a\xda\xaf\xdb\x95\xf3\x62\xab\x33\xbd\x50\x73\x7f\x98\xf5\x3b\xe3\xf1\xf2\xcc\xfa\xf3\xc3\x02\x68\x01\x2f\xa1\x8d\xc5\x0c\xa7\xcb\xce\xa1\x9f\x05\x98\xbd\x7d\x75\x50\xd5\x99\xd3\x95\x3e\x12\x32\x2b\xc8\x37\xdb\xad\xc7\x49\xe9\x37\xae\x8e\x28\xd3\x06\x62\xd6\x98\x88\xb8\x86\xa5\xc3\x1c\x1d\x7f\xc0\x58\x0b\x19\x92\x37\xa2\x29\x61\x23\xe0\x74\xb4\x37\x37\x7b\x3d\x5d\x74\x81\xdf\x81\x41\x14\x08\xe8\xcc\x48\x5d\x38\xbe\x4a\x57\xd0\x1a\x33\xeb\xd9\x8b\x6a\x6d\x59\xd7\x62\x96\x44\x51\x54\x50\x09\x29\xa9\x92\xf8\xda\xf8\x0b\x6a\xef\x6c\xf2\x74\xd2\xc6\x4d\x74\x81\x6e\x96\xa5\x6a\x7e\xa6\x35\x0e\xa4\xea\x65\xad\x9b\x89\x71\x38\xec\x14\x26\x06\xbe\xd7\xd3\xea\x59\xdd\x45\x2b\x69\x73\x67\xfb\x3a\x6a\x5e\x88\xb4\x51\x4f\xbb\xff\xec\xe9\xf4\x60\x6b\x18\xab\xed\x5a\x97\xdc\x4b\xcb\x03\xe6\xcd\x01\xbb\x1a\xe8\x4a\x6a\xdd\x15\x62\x66\x41\x21\xb9\x8f\x39\x37\xff\xad\x72\xa4\x4b\x59\x45\x6b\x5c\xc3\x7b\x71\x79\x7a\x37\x6e\x56\xc2\x7e\x6f\x50\xf1\xb1\xc6\x01\xec\xe1\xbf\x81\xdf\xaf\xe8\x3f\xa8\x79\xda\x6a\x59\xc7\x61\x18\xa2\x11\x9a\xdc\x3d\xca\x08\x4d\x36\x9e\xf2\xa9\x8c\x01\xd9\xc7\xe2\x83\x76\x76\xcd\x4d\x89\x6b\x66\xfe\xec\xa2\xa3\x57\x98\x8f\x1d\x57\xc6\x6d\x59\x0c\x9a\xb4\x7f\x51\xc4\xd0\xc9\x95\xa1\x33\xda\xc0\xf9\x49\xc7\xca\x42\xab\x0b\xf1\x4d\xc3\xee\xb7\x9d\x6a\x7f\xb2\xdf\xa4\x77\xf3\x85\xf6\xbf\xdf\x0f\x2f\xcd\x56\x3f\xa9\xb5\xb2\xbd\x43\xd6\x90\xf1\x91\x1a\x91\xf1\x64\x93\x91\xe3\x49\xdf\x99\x90\xc1\x49\xe7\x6f\xe8\xd0\x1b\x23\x8b\x8f\x3e\x83\x93\x4a\xe0\xc8\xe9\x4b\x65\xcc\x30\xb0\x91\xf2\x87\x1c\x14\x6f\xd7\x5b\xe7\x35\xc0\x1d\xab\xa9\x91\x86\x54\x3f\x0b\x4a\x1e\x7b\x92\xb9\x17\x19\xc7\xb0\x4f\x9c\x64\xfe\x76\xa6\x8d\xf7\xac\xe4\xd3\x92\x12\x8a\xa8\x78\xfe\xc2\xa3\x71\xb9\xf5\xa3\xd4\xc2\x17\xcc\x9f\x78\x24\x8e\xc7\x35\x39\xdc\xcb\xa8\xbd\xdf\xcc\xb5\x7d\x8c\x8e\xf3\x93\x05\xe0\x7e\xe3\x48\xae\x8c\x3d\x3b\x9e\xd7\x68\xc4\x83\xb7\x85\x54\x45\x53\xc3\x7c\xc6\xbc\x83\xbf\xff\xff\x06\xef\xf0\x6b\xca\xac\xf7\xff\xc4\xf7\xfb\x13\x58\x3f\x0e\x3b\xed\xf7\xfd\x56\xfb\x98\xb5\x65\x93\xff\x9b\x83\x08\x11\x22\x44\x88\x10\x21\x42\x84\x08\x11\x22\x44\x88\x10\x91\xbb\x91\xe5\x0b\xe1\x38\x3e\x6d\x4e\xf8\xdb\x60\xda\x1f\x31\x12\x5f\x07\x27\xfa\xf9\xc9\x7c\xff\x9f\x37\x85\x90\x1f\xcc\xef\xc0\x33\x53\xf3\xfb\xef\xe3\x3d\xff\x73\xe8\xb3\xdf\xfd\xef\x96\x12\x72\x01\x4e\xc3\x2b\x70\x12\x2a\xa0\x08\x5e\x2f\x21\xe4\x14\xec\x86\x30\x04\xa1\x0f\xde\xb6\xbf\xf1\xaf\x85\x45\x40\xe0\xee\x0c\x42\xbe\x83\x2f\xe0\x2c\x9c\x86\x53\x70\x10\x82\x10\x80\x06\x98\x03\x79\x70\x63\x3a\x21\xef\xc3\x21\x88\x40\x37\x74\xc0\x4a\x68\x80\xe5\xb0\x67\x1a\x21\x1b\xa1\x04\xee\x14\x13\xf2\x2e\xbc\x01\xe7\xe1\x28\x0c\x80\x0e\x1a\xfc\x1d\x24\x70\x42\x01\x7c\x56\x44\xc8\x45\x38\x03\xff\x85\x5e\xa8\x87\xdf\xc1\x1c\x28\x82\x02\xb8\x57\x88\x1c\xc1\x39\x38\x0c\x7b\xa1\x1f\xba\xa1\x03\xda\xa1\x0d\xee\x15\xa0\x6d\xf0\x0e\x9c\x81\xff\xc1\xbf\x60\x3f\xec\x83\x55\xb0\x1c\x4a\xe1\xfa\x54\x42\x2e\xc3\x19\x38\x09\x87\xe0\x45\x38\x08\x1b\xa1\x1b\x5c\xe6\x7f\xbc\x80\x6f\xf3\x09\xf9\x1a\x6e\xc1\x0b\x70\x00\xb6\x82\x07\x6a\x61\x36\x94\xc2\x7d\x5c\xc7\x7b\x79\xf6\xf5\x14\x31\x76\xe4\xd6\x24\x86\x21\xa3\x3d\xd7\xa6\x31\x8c\x70\xab\xfa\x79\x4e\x64\x18\xe1\x2a\xe5\xcc\x54\x86\x21\x75\xcf\xb5\xc9\x0c\x19\x95\x17\xd3\x19\xc4\x74\x86\x5c\xfc\x26\x9b\xfe\x95\x49\xcc\x68\xc8\xa9\x71\x23\x66\x34\xe4\xe2\xe8\x11\x93\x1a\x78\x89\x13\x9a\xd4\x90\x99\x66\x31\xaf\x61\xec\x24\x4e\x36\x87\xd9\xa6\x36\x8c\x9a\xb4\xe4\xe4\x02\x7e\x2e\x9f\x5b\x60\x3d\xce\x9a\x53\x0b\x7e\x0c\x00\x00\xff\xff\xb4\x7d\x60\xb7\x00\x50\x00\x00")

func templatesDaoSqlxTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoSqlxTmplSwp,
		"templates/dao/.sqlx.tmpl.swp",
	)
}

func templatesDaoSqlxTmplSwp() (*asset, error) {
	bytes, err := templatesDaoSqlxTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/.sqlx.tmpl.swp", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1457498163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoPgxTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x6f\x8f\x9b\x46\x13\x7f\xef\x4f\x31\x0f\x4a\x1e\xc1\x95\x72\xe9\xdb\x4a\x6e\x55\xdf\xd9\xea\x49\x97\xdc\xc5\xb6\x54\x55\x55\x75\xe2\xec\xc1\xa1\xc1\x40\x76\xd7\x8e\x4f\xd4\xdf\xbd\x33\x2c\xcb\x81\x0d\x35\x38\x57\x35\x2f\x7a\x8a\x1c\xd8\xdd\xf9\xf7\x9b\xdf\xcc\x0e\xe1\x3a\x4d\x84\x02\x2b\x58\x2b\x6b\x60\x5e\x56\xa1\xfa\xb0\x79\xf4\x16\xc9\xfa\xf2\x0f\x7f\xf1\x71\x71\x99\xae\x76\xd6\x60\x90\x65\xc2\x8f\x57\x08\xaf\x8a\x73\xdf\x0f\xc1\xbb\xc9\x1f\xe5\x7e\x5f\x0a\x67\x59\xb1\x5f\xec\xe1\xf2\x9d\xbf\xc6\xfd\xde\x22\x79\x8c\x97\x74\x72\xa0\x9e\x52\x84\x2c\xf3\x26\x61\xbc\x44\xa1\xb7\x41\x2a\xb1\x59\x28\xc8\xe0\x7a\x04\x17\x64\xd0\xbb\x4a\xe2\xf8\x3e\x49\x22\xd8\x97\x02\x33\x95\x08\xec\x70\x7e\x30\xb8\xbc\x9c\x2d\xfc\x58\x82\xfa\x80\x20\x92\xcf\x10\xc6\x2a\x01\x1f\x62\xfc\x0c\x17\xe4\x21\x69\x62\xe9\x39\xe9\xd5\xea\x06\xc1\x26\x5e\x80\x24\x99\x2c\x83\xc3\x6d\xd8\xef\xa7\xa4\xc3\x66\x45\xb9\x29\x7a\x73\xc0\x6e\x54\xe4\x02\x0a\x91\x08\x07\xb2\x0a\x5e\x14\xe6\xce\x85\x57\x41\x88\xd1\x32\x87\x6d\xc2\x4f\x12\xbe\x25\xc3\x40\x7f\x5b\x5f\xc0\x96\x81\xe3\x83\x14\x1b\x3d\xe6\x67\xbd\x8a\x83\x06\x3d\x3e\x4f\x26\x58\x0d\xf9\xe3\x71\x98\x76\x0f\x53\xfc\xf7\xff\x8a\x2d\x97\x64\x81\x34\x97\x07\x9c\xfc\x37\x0c\x72\x23\xff\x1b\x42\x1c\x46\x14\x8b\x11\x15\xa8\x36\x22\xe6\xc5\x3c\xd0\x7c\x5d\xcb\x09\x94\x6c\x8f\x10\xb6\x9b\x70\x71\x7a\xf8\x48\xaa\xbc\x12\x82\x22\xdd\xc3\x67\x80\x20\x47\xa3\xea\x74\xe1\x15\xc9\xb9\xec\xda\x60\x7f\x44\x00\x59\x65\xc0\x6f\xbf\x9f\xcb\x01\x69\xe7\xba\x0c\x09\x24\xb1\xa0\x45\x59\x85\x07\x45\x48\x9b\x48\xe5\x08\xad\xfd\x8f\xd8\x2e\xf5\xc6\xa5\xec\x47\x18\x1b\x50\x18\x39\x56\xb0\xc4\x00\x45\x1e\x89\x77\x15\x25\x12\x6d\xbd\x1c\x24\xc5\xe2\x3b\xdc\x29\xdb\x58\xeb\x47\x87\x2e\xec\xd3\x5a\x6b\x44\xa9\x13\x51\x16\x4c\xec\x6f\xfe\x98\x91\x2d\xc6\x9c\xf2\xa9\x8d\x9d\x6d\x0c\x7d\x66\x69\x27\xa6\xf6\x8f\xa1\x03\x63\x5b\x82\x32\xc4\x18\x82\x9f\xa6\xb4\x69\x17\x0b\x2e\xef\x38\x50\x2b\x30\x43\x72\xbd\x5f\x12\x7d\x92\x88\xb5\xaf\x88\xdb\x8d\x94\x32\xc4\x97\x51\xb8\x40\x2a\x07\x3a\x49\x89\x82\x47\x84\x8d\xc4\x25\xed\xd2\x3f\x89\xd4\xb9\x7d\xf2\x6c\x93\x2e\x7d\x85\xd4\x5b\xe9\x77\x8d\xb1\x92\xba\x26\x70\x87\x8b\x9f\xc4\x4a\x36\xd7\x85\xbd\x6d\xb6\xec\x50\xa1\x91\x71\x14\x81\xbf\xc0\x6c\x9f\x0d\xb6\x7e\x94\x23\x5f\x5b\x3e\x8f\xb2\x87\x68\x37\x92\x86\x7f\x0b\xd4\xd8\x34\xa3\x55\x9a\x39\x54\x6f\xca\xdf\x96\x7c\xc7\xe8\x80\xaa\xf7\x93\x03\xfc\x36\x7a\xaa\xd9\x85\x3f\x81\x85\xae\x7c\x49\x27\xec\xb4\xa9\x72\x3a\xdc\x13\xec\xaa\xfc\x14\xb1\x33\xd6\x6c\x7c\x3b\xbe\x9a\xc3\x05\x4c\xa6\x77\x6f\x59\x9f\x37\xf7\x1f\x23\x93\xca\x5f\x7e\x1e\x4f\xc7\xb4\x1a\xd3\xeb\x9d\x98\xfb\xab\x22\x8e\x9c\x6d\x3f\xc2\xed\xcd\xdb\x9b\x39\x7c\x67\x55\xe9\xf2\xb7\xed\x4c\x07\xeb\x5d\x8f\xbc\xf7\x1b\x14\x4f\xf9\xca\x27\xaa\x9b\xd4\x71\x18\xac\x2f\x04\x64\xbe\x6b\x86\xc4\x05\xb5\xd3\x2d\x74\xbe\xfb\xd7\xe0\xe9\x8e\x91\xda\x9d\x8d\xce\x8c\x6b\xae\x3f\x67\x5c\x48\x04\x69\x1a\x3d\x41\xa5\x4e\x5c\x88\xc2\x75\xa8\x78\x89\xf6\x83\x40\x62\xfe\xdc\xf9\x06\x7a\x11\x08\x2d\x33\x1c\x18\x07\xa9\x05\x5b\x56\xa5\x03\xb3\x95\x6f\x86\x40\xe3\xa4\x37\x4b\x05\xf9\x17\xd8\xd6\xdd\xf4\x7a\x3c\x85\xd1\xaf\xf0\x5a\x82\x55\xc6\xe6\x14\x25\x6a\x34\xea\xe8\x7e\x80\x37\x27\xb4\xe9\x2c\xbe\x5e\xb2\xaa\x5c\xe6\x50\x51\x81\xcd\x69\x4d\x77\x93\xc9\x6c\xcc\xaa\x2c\x03\xa8\x53\x6d\xb7\x74\xa7\xb9\xe6\x82\xab\xd7\x89\xa1\x41\xd3\xa4\x74\x78\xff\xd4\x9b\x77\x87\xe1\xe2\xc5\xb8\xd5\xa5\xfc\xfe\x63\xda\xd7\xc6\x34\xd3\x6d\xce\xe0\x58\xcb\x88\xd8\x8f\x7a\xe5\x47\xda\x11\x05\x2b\x1f\x5f\x0e\xcc\xfc\x2d\xda\x09\x6f\x34\x5c\xfb\x39\x1b\x0a\x48\x18\x26\x1a\x4e\x71\x29\x6f\xf4\x98\x71\xf4\x2d\xa1\x6b\x4b\x0f\x21\x76\x52\x00\x03\x18\x49\x6c\x3b\xab\xa7\x14\x3a\x6b\xc6\xa3\x4e\xee\x52\x3d\x34\x3b\x5c\xbf\x8f\xce\x77\x9e\x0d\xb0\xae\xee\x21\x94\x12\x9d\x03\x31\x30\x75\x40\xbe\x56\x8b\x59\xa6\x25\x67\xef\x6f\xef\x57\xbb\x72\xa6\xaa\x56\xa4\xae\x38\xa9\xd6\x54\xf5\x29\xff\x37\x3e\xe8\x7d\xf7\x02\x53\x5f\xa0\x6d\x35\xd3\xe8\x41\x5b\xb0\x5c\xb2\x59\xd2\xb6\x54\xd4\xf6\x25\x69\x0e\x54\x4b\xeb\xe1\xb8\xef\x8e\x69\x02\xb5\xf9\xa8\x47\x11\xb8\xa7\x06\xd2\xc4\xf1\x3c\xaf\x56\x3a\xc3\x03\xf3\xf5\xb4\x52\xb9\xd2\x7c\x88\xc7\xc3\x36\x7f\x40\x9c\xcc\x89\xa1\xe3\x89\x9c\x1c\xe4\x43\x4b\xfd\x93\xf9\xd0\x16\xbe\x2c\x1f\x2f\x9d\x8e\x3e\xb8\x3e\x57\x55\xcf\xb2\x3d\x8f\xf9\x0f\xd5\x1e\xac\x03\xa4\x16\xfc\x15\x32\xad\x27\x22\xe7\xf1\xae\x19\x8d\x73\x33\xfd\x57\x00\x00\x00\xff\xff\xbf\x15\xd7\xdc\x67\x14\x00\x00")

func templatesDaoPgxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoPgxTmpl,
		"templates/dao/pgx.tmpl",
	)
}

func templatesDaoPgxTmpl() (*asset, error) {
	bytes, err := templatesDaoPgxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/pgx.tmpl", size: 5223, mode: os.FileMode(420), modTime: time.Unix(1457494386, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDaoSqlxTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xdb\x6a\xdb\x40\x10\x7d\xf7\x57\x4c\x45\x13\xa4\xd4\xc8\xe9\x6b\xc1\x2d\x38\x91\xa9\x21\x89\x89\x65\x28\xa5\x94\x22\x5b\xa3\x54\xad\xa4\x55\x57\xeb\x44\x46\xf5\xbf\x77\x76\xb5\x92\x6f\x0a\xb6\xe3\x94\x52\x48\x9e\x94\x9d\xdb\x39\x67\x66\xd6\x1b\xc6\x29\xe3\x02\x8c\xbb\x50\x7c\x9f\x4d\xec\x29\x8b\x3b\x3f\x62\x16\x72\x96\x74\xb2\x5f\x51\x6e\xb4\x1a\x1c\x66\x13\xe4\x13\xce\x7c\xd1\xc1\x1c\xe3\x34\xf2\x78\x27\x66\x3e\x46\x4b\xe7\x20\x16\x46\xab\x55\x14\xdc\x4b\xee\x10\x5e\xeb\xe3\x77\x5d\xb0\x07\xea\x33\x5b\x2c\x6a\xdf\xa2\xd0\x76\x6d\x43\xff\xc6\x8b\x71\xb1\x30\x28\x1e\x13\x9f\x3c\x5b\x62\x9e\x22\x14\x85\xdd\x0f\x13\x1f\x79\x69\x86\x4c\xf0\xd9\x54\x40\x01\x97\x3d\x50\xe5\x6d\x47\xa3\x71\x09\x38\x2c\xea\x28\x57\x30\x8e\xfb\x06\x2d\x41\x07\x21\x46\xbe\xc2\xdc\x97\x5f\x12\x72\x30\x4b\xa6\x60\x66\x32\x1f\x9c\x11\xee\x35\x40\x16\xc8\xff\x7a\x73\x3a\x57\xa1\xb6\x3c\x86\xdf\x20\x83\x2e\xbc\x8c\x3c\xcc\x14\x6a\xe3\x98\xc0\x55\x71\xa6\xca\xe5\x2a\x68\xcb\xf3\x36\x20\xe7\x8c\x5b\x50\xb4\x80\xfe\xee\x3d\x0e\x39\x34\x39\x2a\x33\x35\x4b\x62\x35\x5c\xe7\xca\xb9\x18\xc3\x19\xf4\x47\xc3\x6b\xe5\x3e\xf6\x26\x51\x45\xff\xd3\x47\x67\xe4\xd0\x69\x42\xff\x0e\xf9\xd8\xbb\xd3\x34\xc9\xd4\x85\x0f\x70\x35\xb8\x1e\x8c\xe1\xad\xa1\x32\x52\x75\x99\x51\xb1\xb5\x2f\x7b\xf6\xed\x0c\xf9\x7c\xc4\x1e\x72\x93\x6a\xb5\x21\xb5\x34\x10\x77\xea\x25\xe6\x69\x6e\x81\x8a\xe2\x28\x66\x3c\x81\xd3\x5c\xc1\x6f\x91\xa0\x47\x8a\x36\xce\x9b\x65\x6b\x83\xc8\xe1\x4c\xce\xa8\x3d\xce\x8f\xd6\x10\xfe\x92\x88\xab\x4a\x8a\x7c\xa7\x86\x4f\x97\xd0\x8d\xc2\x29\x1e\x3e\x7c\x6d\x60\x9c\x32\xf5\xe6\x10\x26\x02\x79\xe0\x4d\xb1\xa0\xc3\x28\x8c\x43\x21\x8f\xc8\x1e\x04\x19\xaa\x6f\x12\xf9\xcb\xd7\x7d\x64\xce\x25\xdb\xd8\xfb\x89\x8f\xfb\x9f\x5b\xcf\x27\x78\xa9\x74\x18\xd4\x54\x5e\x51\x46\x43\x63\xa9\xaa\xbc\xe9\x02\x5d\x4a\xb6\x9b\x72\x62\x12\x98\xc6\x70\x74\xe9\x8c\xa0\xf7\x19\x4e\x32\x30\x6a\x15\x4a\x54\xa4\xb8\xce\x58\xea\xf0\x1e\xce\x77\x64\x2b\x7b\x7e\xe2\xcb\x54\x2a\x66\x33\x91\x56\x71\x77\xa6\x61\xbf\xef\x3a\x32\x95\x51\x49\x5f\xa5\x52\xa3\xc1\x1e\xb2\x76\xf3\x66\xd6\x23\x55\x95\x94\x5e\xa4\x44\x12\x46\x74\xdd\xe9\x99\x2a\x47\x4a\x27\xf3\x31\x40\xae\x52\xda\x17\x11\xcb\xd0\x2c\x43\x03\xa6\x0f\x6f\x30\x17\xa6\xb5\x82\x37\x94\x55\x13\x7c\x30\x9b\x7a\x6a\x2d\x69\xd1\x30\x3b\x25\x44\x95\x67\x65\xc4\xc3\xa5\x17\x21\xac\x1c\xb7\x51\x56\x96\x45\xed\x9e\x53\xab\xbd\x34\xa5\x1f\x04\x93\x48\x84\x6b\xa2\xd4\xdc\x28\xcb\x73\xad\xcb\x5e\xd7\xce\xcb\xf6\xfc\xbf\xdb\x53\xdd\xc6\x2f\x7b\x53\xed\x4d\xfd\xdc\xda\xd8\x9f\xd5\x07\x94\x05\xae\x77\x8f\x26\xd3\xe7\x1b\x54\xca\x41\xd6\xcc\x65\xdf\x48\x0b\xf4\xb3\x41\x92\x21\xbd\xf4\x96\x82\xe8\xca\xe5\x05\x16\x2a\xab\xc9\x34\x34\xc0\x28\xc3\xc7\x7c\x67\xa9\xef\x09\x2a\xaf\x1f\x1b\x8b\x86\x6d\xdf\x46\x4b\xab\xdc\x8c\x77\xe3\x09\xf1\x74\xf0\xb2\x82\x4c\xb6\x3f\x85\x3a\x62\x5f\x22\x95\x4a\x7b\x08\xbf\x76\x37\x14\x45\x19\xe9\xde\x5e\x55\x0f\x59\x58\xbd\x1e\xca\xf5\xff\xb6\xfd\xa3\x22\xcd\x3e\x3d\x8e\xa7\xe5\x7e\xb0\xb5\xfd\xe8\xea\xc9\xab\x28\xae\x6b\x45\x4b\xe9\x91\x02\xdb\xa3\xd6\xfc\x9c\x59\x27\x5a\xb5\x78\x07\xd1\x0d\x92\x65\xd4\x33\x91\x3c\x00\xed\xb2\xff\x87\x4e\xd8\x51\x5d\xa2\xcb\xeb\xdf\xf6\xe7\x50\xc6\x47\xb5\xeb\x51\xb6\x6b\xb0\xff\x04\x00\x00\xff\xff\x45\x48\x1b\x14\xca\x0e\x00\x00")

func templatesDaoSqlxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDaoSqlxTmpl,
		"templates/dao/sqlx.tmpl",
	)
}

func templatesDaoSqlxTmpl() (*asset, error) {
	bytes, err := templatesDaoSqlxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dao/sqlx.tmpl", size: 3786, mode: os.FileMode(420), modTime: time.Unix(1457498139, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/dao/.pgx.tmpl.swp": templatesDaoPgxTmplSwp,
	"templates/dao/.sqlx.tmpl.swp": templatesDaoSqlxTmplSwp,
	"templates/dao/pgx.tmpl": templatesDaoPgxTmpl,
	"templates/dao/sqlx.tmpl": templatesDaoSqlxTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"dao": &bintree{nil, map[string]*bintree{
			".pgx.tmpl.swp": &bintree{templatesDaoPgxTmplSwp, map[string]*bintree{}},
			".sqlx.tmpl.swp": &bintree{templatesDaoSqlxTmplSwp, map[string]*bintree{}},
			"pgx.tmpl": &bintree{templatesDaoPgxTmpl, map[string]*bintree{}},
			"sqlx.tmpl": &bintree{templatesDaoSqlxTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

